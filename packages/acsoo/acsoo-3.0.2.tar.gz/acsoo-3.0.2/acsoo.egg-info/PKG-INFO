Metadata-Version: 1.2
Name: acsoo
Version: 3.0.2
Summary: Acsone Odoo Dev Tools
Home-page: UNKNOWN
License: GPLv3+
Description: acsoo - Acsone Odoo Dev Tools
        =============================
        
        .. image:: https://img.shields.io/badge/license-GPL--3-blue.svg
           :target: http://www.gnu.org/licenses/gpl-3.0-standalone.html
           :alt: License: GPL-3
        .. image:: https://badge.fury.io/py/acsoo.svg
            :target: http://badge.fury.io/py/acsoo
        .. image:: https://travis-ci.org/acsone/acsoo.svg?branch=master
           :target: https://travis-ci.org/acsone/acsoo
        .. image:: https://codecov.io/gh/acsone/acsoo/branch/master/graph/badge.svg
          :target: https://codecov.io/gh/acsone/acsoo
        
        This is a set of command-line utilities to facilitate
        the Odoo development workflow at Acsone.
        
        It assumes the project is a setuptools-based python package
        that can be packaged and installed with pip.
        
        .. contents::
        
        Criteria for tools to be included here:
        
        * being small wrappers around standard commands (``git``, ``pip``, etc)
        * yet being sufficiently non-trivial to be error-prone or time consuming when
          done manually
        * being used across several Acsone Odoo projects
        
        Installation
        ~~~~~~~~~~~~
        
        .. code:: shell
        
           pip install --user acsoo
        
        or
        
        .. code:: shell
        
           pipx install acsoo
        
        .. note::
        
           Since ``acsoo`` has a lot of dependencies that are not required at runtime,
           for your application, it is not recommanded to install it in the same
           virtualenv as your project. A good approach is to install it in it's own
           virtual env and symlink the ``acsoo``, ``mrbob`` and ``bumpversion``
           executables somewhere in your PATH. `pipx <https://pypi.org/project/pipx/>`_
           is an interesting way to manage such python scripts without polluting your
           system.
        
        To enable bash completion, add this line in your ``.bashrc``:
        
          .. code:: shell
        
             eval "$(_ACSOO_COMPLETE=source acsoo)"
        
        What we have here
        ~~~~~~~~~~~~~~~~~
        
        Below, the list of available commands with a few examples.
        
        Use ``acsoo --help`` or ``acsoo <command> --help`` for more information.
        
        Initialize a new project
        ------------------------
        
          .. code:: shell
        
            mrbob acsoo:templates/project
            cd {project name}
            mkvirtualenv {project name} -a .
        
        acsoo freeze
        ------------
        
        Just like pip freeze, except it outputs only dependencies of the provided
        distribution name.
        
        acsoo pr-status
        ---------------
        
        Look for git references of the form ``refs/pull/NNN/head`` in requirement
        files and print the corresponding GitHub pull request status.
        
        acsoo tag
        ---------
        
        Tag the current project after ensuring everything has been commited to git.
        
        acsoo tag-requirements
        ----------------------
        
        Tag all VCS requirements found in ``requirements.txt``, so
        the referenced commits are not lost in case of VCS garbage collection.
        
        acsoo addons
        ------------
        
        A set of commands to print addons lists, useful when running tests.
        
          .. code:: shell
        
             acsoo addons list
             acsoo addons list-depends
        
        acsoo checklog
        --------------
        
        Check if an odoo log file contains error, with the possibility to ignore some
        errors based on regular expressions.
        
          .. code:: shell
        
             acsoo checklog odoo.log
             odoo -d mydb -i base --stop-after-init | acsoo checklog
             acsoo checklog --ignore "WARNING.*blah" odoo.log
        
        bumpversion
        -----------
        
        Bumpversion is a software automatically installed with acsoo. It allows you to
        increment or simply change the version of the project in several files at once,
        including acsoo.cfg.
        
          .. code:: shell
        
            bumpversion {part}
        
        Where part is 'major', 'minor' or 'patch'
        (see `semantic versioning <http://semver.org/>`_).
        
        Configure bumpversion by editing the .bumpversion.cfg config file at the root
        of your project. See the bumpversion `documentation
        <https://pypi.python.org/pypi/bumpversion>`_ to go further
        (automatic commit, tag, customisation...).
        
        Deprecated commands
        ~~~~~~~~~~~~~~~~~~~
        
        acsoo wheel
        -----------
        
        **This command is deprecated, use pip >= 20.1 and do not use editable VCS
        dependencies. `pip wheel -e . -r requirements.txt --wheel-dir=release` will
        then give the same result, including caching of pinned VCS dependencies.**
        
        Build wheels for all dependencies found in ``requirements.txt``,
        plus the project in the current directory.
        
        The main advantage of this command (compared to a regular
        `pip wheel -r requirements.txt -e . --wheel_dir=release --src src`),
        was that it maintains a cache of git dependencies that are pinned with
        a sha1.
        
        acsoo release
        -------------
        
        **This command is deprecated. Releasing is automated via .gitlab-ci. See
        the `build` stage in the project template.**
        
        Perform ``acsoo tag``, ``acsoo tag_requirements`` and
        ``acsoo wheel`` in one command.
        
        acsoo flake8
        ------------
        
        **This command is deprecated, use a .flake8 file in your project,
        in combination with pre-commit. See the project template for a reasonable default.**
        
        Run `flake8 <https://pypi.python.org/pypi/flake8>`_ with sensible default for Odoo code.
        
        It is possible to pass additional options to the ``flake8`` command, eg:
        
          .. code:: shell
        
            acsoo flake8 -- --ignore E24,W504
        
        acsoo pylint
        ------------
        
        **This command is deprecated, use a .pylintrc file in your project,
        in combination with pre-commit. See the project template for a reasonable default.**
        
        Run `pylint <https://pypi.python.org/pypi/pylint>`_ on detected Odoo addons in odoo/addons,
        odoo_addons or the current directory.
        It automatically uses the `pylint-odoo <https://pypi.python.org/pypi/pylint-odoo>`_ plugin and
        runs with a reasonable configuration, including an opinionated set of disabled message.
        
        It is possible to pass additional options to the ``pylint`` command, eg:
        
          .. code:: shell
        
            acsoo pylint -- --disable missing-final-newline
        
        This command returns an non-zero exit code if any message is reported.
        It is however possibly to display messages while reporting success, eg:
        
          .. code:: shell
        
            acsoo pylint --expected api-one-deprecated:2,line-too-long
        
        The above command succeeds despite having exactly 2 ``api-one-deprecated`` or
        any number of ``line-too-long`` messages being reported.
        
        It is also possible to force failure on messages that are ``expected`` in the
        default configuration, eg to fail on ``fixme`` errors, just expect 0 ``fixme``
        messages, like this:
        
          .. code:: shell
        
            acsoo pylint --expected fixme:0
        
        acsoo.cfg
        ~~~~~~~~~
        
        A file named ``acsoo.cfg`` at the project root helps you set sensible defaults.
        
        Here is a minimal example:
        
          .. code:: ini
        
            [acsoo]
            trigram=xyz
            series=10.0
            version=1.5.0
        
        And a more elaborate example:
        
          .. code:: ini
        
            [acsoo]
            trigram=xyz
            series=11.0
            version=1.5.2
            pushable=
              github.com:acsone
              github.com:mozaik
        
            [checklog]
            ignore=
              WARNING .* module .*: description is empty !
              WARNING: unable to set column .* of table account_analytic_account not null
        
        Useful links
        ~~~~~~~~~~~~
        
        - pypi page: https://pypi.python.org/pypi/acsone
        - code repository: https://github.com/acsone/acsoo
        - report issues at: https://github.com/acsone/acsoo/issues
        
        Maintainer
        ~~~~~~~~~~
        
        .. image:: https://www.acsone.eu/logo.png
           :alt: ACSONE SA/NV
           :target: https://www.acsone.eu
        
        This project is maintained by ACSONE SA/NV.
        
        Changes
        ~~~~~~~
        
        .. Future (?)
        .. ----------
        .. -
        
        3.0.2 (2020-10-14)
        ------------------
        
        - Lift setuptools version restriction.
          It has https issues with pypi.org since 2020-10-14.
          his means odoo-autodiscover>=2 must be used
          on Odoo<=10 projects.
          See also https://github.com/acsone/setuptools-odoo/issues/10.
        
        3.0.1 (2020-07-29)
        ------------------
        
        - [REM] Remove mrbob dependency as pip >= 20.2 make install crash
        
        3.0.0 (2020-07-01)
        ------------------
        
        - [DEL] drop python 2 support (previous versions of acsoo are still available
          on PyPI, and for regular use, the python 3 version works for Odoo 8, 9, 10
          projects too)
        - [ADD] acsoo freeze to limit pip freeze output to dependencies of a given
          distribution
        - [ADD] acsoo pr-status to print the status of GitHub pull requests
          found in requirement files with revision of the form refs/pull/NNN/head
        - [DEL] deprecate ``acsoo wheel`` (now supported by pip natively) and
          ``acsoo release`` (which is automated in GitLab CI)
        - [IMP] project template: ci.skip when pushing translation updates
        
        2.1.0 (2020-05-25)
        ------------------
        
        - [IMP] project template: better and simpler isort config
        - [IMP] project template: merge request templates
        - [IMP] support non-editable VCS requirements in tag_requirements command
        - [DEL] remove --force option of tag_requirements command
          as it does nothing useful, since all we want of this command
          is to make sure that a tag is present
        - [MNT] declarative setuptools configuration
        - [IMP] pin flake8 to version 3.7.9 (reminder: acsoo flake8 is deprecated,
          use pre-commit instead)
        - [IMP] pin pylint-odoo to version 3.1.0 (reminder: acsoo pylint is deprecated,
          use pre-commit instead)
        
        2.0.0 (2020-01-15)
        ------------------
        
        - [IMP] project template: publish html coverage in gitlab-ci
        - [IMP] project template: branch coverage in gitlab-ci
        - [IMP] project template: pre-commit cache in gitlab-ci
        - [DEL] deprecate acsoo pylint in favor of pre-commit and per project .pylintrc
        - [IMP] Odoo 13 support
        - [IMP] project template: rename requirements-dev.txt to requirements.txt.in,
          better reflecting that these are input requirements and not requirements
          for the development environment
        - [IMP] project template: update copyright year
        - [IMP] project template: remove module_auto_update, use click-odoo-update instead
        
        1.9.0 (2019-02-28)
        ------------------
        
        - [IMP] project template: use pre-commit (black, isort, flake8)
        - [FIX] project template: fail on click-odoo-update error
        - [FIX] project template: fix deploy log file
        - [FIX] acsoo pylint: compatibility with pylint 2
        
        1.8.3 (2019-01-22)
        ------------------
        - [FIX] acsoo pylint: Adapt config to also work with pytlint-odoo 2.0.1
        - [IMP] project template: use click-odoo-update
        
        1.8.2 (2018-11-05)
        ------------------
        - [IMP] project template: better way to declare python version
          in .gitlab-ci.yml
        - Fix acsoo tag for Odoo 12
        
        1.8.1 (2018-10-30)
        ------------------
        - [IMP] ignore pylint C0303 (https://github.com/PyCQA/pylint/issues/289)
        
        1.8.0 (2018-10-29)
        ------------------
        - [IMP] acsoo wheel: add --no-deps, so we can build requirements.txt without
          fetching dependencies, and later install the project with --no-index and
          --find-links=release/ so as to detect missing dependencies (#38)
        - [IMP] acsoo wheel: add --exclude-project option (to build requirements.txt
          without the current project), in preparation of #44
        - [IMP] acsoo wheel: use a cache of editable git dependencies
        - [IMP] acsoo wheel: use pip wheel -e . to build project instead of
          setup.py bdist_wheel, since the reason we were doing that has apparently
          been resolved in recent pip version (pip issue 3499 referred in a comment
          is apparently unrelated unfortunately, so I'm not sure why we were
          doing that exactly, probably https://github.com/pypa/pip/issues/3500)
        - [IMP] flake8: ignore W503 and W504 by default (line break around logical
          operators)
        - [IMP] project template: Odoo 12 support
        - [IMP] project template: pin acsoo version
        - [IMP] project template: acsoo wheel --no-deps, so, combined with
          pip install --no-index in the test stage, it verifies that all dependencies
          are included in requirements.txt
        
        1.7.1 (2018-07-15)
        ------------------
        - [IMP] project template: add makepot in .gitlab-ci.yml
        - [IMP] pylint: whitelist lxml c library
        
        1.7.0 (2018-06-04)
        ------------------
        - [IMP] more python 3 and Odoo 11 support
        - [IMP] project template: build stage in gitlab-ci
        - [IMP] project template: new style deploy / upgrade
          (using checksum upgrades and click-odoo-upgrade script)
        - [IMP] project template: enforce odoo-autodiscover>=2 and do not use it
          for Odoo >= 11
        - [IMP] add --dry-run option to acsoo tag and tag_requirements
        - [IMP] make the list of places where tag_requirements can push
          configurable
        - [IMP] project template: on demand installation of acsoo and ssh-agent
        - [IMP] project template: use click-odoo-initdb in gitlab-ci
        
        1.6.0 (2018-02-16)
        ------------------
        - [IMP] checklog: add --no-err-if-empty option
        - [IMP] python 3 support
        - [IMP] preliminary Odoo 11 support
        - [IMP] project template: various improvements
        - [IMP] refactoring of get_installable_addons() method for better reusability
        
        1.5.0 (2017-09-19)
        ------------------
        - [IMP] tag_requirements: fetch more aggressively; this solves the errors
          trying to write ref with non existent object
        - [IMP] tag: always tag requirements when doing acsoo tag
        - [IMP] tag: tag requirements before tagging project, so if something fails
          when tagging the requirements the project is not tagged and the release
          build is not triggered.
        - [ADD] addons: add --separator option (and fix tests that were not testing much)
        - [IMP] addons: consider current dir as addons dir candidate
        - [IMP] pylint: look for module to test in current dir by default, using the
          same algorithm as ``addons list``
        - [IMP] pylint: support python 3 style odoo/addons namespace (without __init__.py)
        
        1.4.3 (2017-06-16)
        ------------------
        - [IMP] checklog: consider ignore lines starting with # as comments
        - [FIX] checklog: the previous release broke checklog color output
        
        1.4.2 (2017-06-16)
        ------------------
        - [IMP] checklog: fail if no log record found in input
        - [IMP] checklog: echo with click to be less sensitive to unicode issues
        
        1.4.1 (2017-06-14)
        ------------------
        - [FIX] regression in acsoo release
        
        1.4.0 (2017-06-13)
        ------------------
        - [IMP] colored logging
        - [IMP] major change to acsoo tag and tag_editable_requirements. These changes
          make it easier to work with a CI-driven release process that is triggered on
          new tags. The usual manual ``acsoo release`` process should be mostly unimpacted by
          these changes.
        
          - ``tag_editable_requirements`` is now ``tag_requirements``.
          - the tags structure has changed from ``{series}-{trigram}_{version}`` to
            ``{series}-{trigram}-{req_sha}-{egg}``, where ``{req_sha}`` is the sha of the
            last change to ``requirements.txt``.
          - ``tag_requirements`` includes the egg name in the tag so different commits
            in the same repo can be tagged (before, all addons in a given dependency repo had
            to be on the same commit).
          - when a tag for the given series, trigram and egg already exists on the
            dependency commit, ``tag_requirements`` does not attempt to create another
            tag (this avoids creating useless tags or forced tags) and
            this is sufficient because the sole purpose of these dependency tags is
            to avoid commits to be garbage collected.
          - ``acsoo tag`` now invokes ``tag_requirements``. In most cases however this
            will not place additional tags on dependencies, because the normal workflow
            is to invoke ``tag_requirements`` as soon as ``requirements.txt`` is updated.
          - ``tag_requirements`` automatically transforms http(s) urls into ssh urls
            for the purpose of pushing tags. This allows to maximize the use of http(s)
            urls in requirements so CI and scripts do not require ssh access
            to the public dependencies. This currently only works for the acsone organization
            on github but the mechanism is easy to extend, should the need arise.
        
        1.3.0 (2017-06-04)
        ------------------
        - [IMP] flake8: read additional ``flake8-options`` in acsoo configuration file.
        - [IMP] template: series-dependent odoo command in ``.gitlab.ci.yml``.
        - [IMP] template: createdb in ``.gitlab-ci.yml`` because Odoo 8 does not do it by
          itself.
        - [ADD] addons list-depends: ``--exclude`` option
        
        1.2.2 (2017-05-30)
        ------------------
        - [FIX] regression in ``tag``, ``tag_editable_requirements`` and ``release`` commands.
        
        1.2.1 (2017-05-27)
        ------------------
        - [IMP] add possibility to provide main config file as option.
        - [IMP] checklog: read default options from ``[checklog]`` section of config file.
        - [IMP] pylint: read default options from ``[pylint]`` section of config file.
        - [IMP] pylint: the module or package to lint may be provided with ``-m``.
        - [IMP] flake8: read default options from ``[flake8]`` section of config file.
          The only option so far is ``config`` to provide an alternate flake8
          configuration file. This is useful so developer only need to type
          ``acsoo flake8`` locally, even when a specific configuration is needed,
          so it's trivial to run locally with the same config as in CI.
        
        1.1.0 (2017-05-25)
        ------------------
        - [IMP] pylint: BREAKING the package to test must be provided explicitly,
          as soon as additional pylint options are provided,
          so as to enable easy local testing of a subset of a project. Examples:
          ``acsoo pylint -- -d some-message odoo``, ``acsoo pylint -- odoo.addons.xyz``;
        - [IMP] pylint: disable more code complexity errors: ``too-many-nested-blocks``,
          ``too-many-return-statements``.
        - [IMP] pylint: display messages causing failure last, so emails from CI.
          that show the last lines of the log are more relevant.
        - [IMP] pylint: display summary of messages that did not cause failure, also
          when there is no failure.
        - [ADD] ``acsoo addons list`` and ``acsoo addons list-depends``.
        - [ADD] ``acsoo checklog``.
        
        1.0.1 (2017-05-21)
        ------------------
        - First public release.
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Framework :: Odoo
Requires-Python: >=3.6
