# Provision a docker container
- name: "set empty list for docker parameters"
  set_fact:
    docker_container_params: {}

# Build the list of parameters to Ansible's docker_container module.
# The topology's resource definition parameters should map to
# Ansible's docker_container parameters, except for 'role'.

- name: "Build list of paramters"
  set_fact:
    docker_container_params: "{{ docker_container_params |
                                   combine({res_def_item.key:\
                                            res_def_item.value}) }}"
  with_dict: "{{ res_def }}"
  when: res_def_item.key not in ['role']
  loop_control:
    loop_var: res_def_item

- block:
    - name: Provision Docker container
      docker_container: "{{ docker_container_params }}"
      register: outputitem
  rescue:
    - name: "Fail when docker dependencies are not found"
      fail:
        msg: 'An error occurred with docker_container module.
                It might be caused by either the lack of Docker on the host,
                dependencies, or daemon access denial.
                Please make sure the dependencies are installed
                and Docker configured correctly.
                Try running `linchpin setup docker`
                to install Docker,
                or `pip install linchpin[docker]
                to install Python dependencies.'

- name: "set tmp var"
  set_fact:
    tmp: ["{{ outputitem['ansible_facts']['docker_container'] |
              combine({'resource_definition': res_def}) }}"]

- name: "Append outputitem to topology_outputs"
  set_fact:
    topology_outputs_docker_container: "{{ topology_outputs_docker_container\
                                           + tmp }}"

- name: "Add type to resource"
  set_fact:
    topology_outputs_docker_container: "{{ topology_outputs_docker_container |
                                           add_res_data(res_grp_type,
                                                        res_def['role']) }}"
