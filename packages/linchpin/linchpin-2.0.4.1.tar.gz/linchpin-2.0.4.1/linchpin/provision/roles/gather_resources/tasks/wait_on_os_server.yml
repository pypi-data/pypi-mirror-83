---
- name: "debug"
  debug:
    msg: "{{ os_server_group }}"

- name: "waiting on each job id when state is present"
  async_status:
    jid: "{{ item['ansible_job_id'] }}"
  #  module_name: "os_server"
  register: job_result_present
  until: job_result_present.finished
  retries: "{{ async_retries | default(60) }}"
  #debug:
  #  msg: "{{ item['ansible_job_id'] }}"
  loop: "{{ os_server_group['results'] }}"
  when: state == "present"

- name: "waiting on each job id when state is absent"
  async_status_custom:
    jid: "{{ item['ansible_job_id'] }}"
  register: job_result_absent
  until: job_result_absent.finished
  retries: "{{ async_retries | default(60) }}"
  when: state == "absent"
  loop: "{{ os_server_group['results'] }}"

- name: "Append outputitem to topology_outputs"
  set_fact:
    topology_outputs_os_server: "{{ topology_outputs_os_server + [job_result_present] }}"

- name: "Transform outputs to match the distiller format"
  set_fact:
    res_def_output: "{{ res_def_output | transform_os_server_output }}"

- name: "Add type to resource"
  set_fact:
    topology_outputs_os_server: "{{ topology_outputs_os_server | add_res_data(res_grp_type, 'os_server') }}"
