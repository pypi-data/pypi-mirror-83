- name: "Unset the authvar from previous run"
  set_fact:
    auth_var: !!null

- name: "Set cred profile"
  set_fact:
    cred_profile: "{{ res_grp['credentials']['profile'] | default('default') }}"
  when: res_grp['credentials'] is defined

- name: "Get creds from auth driver"
  auth_driver:
    filename: "{{ res_grp['credentials']['filename'] }}"
    cred_type: "gcloud"
    cred_path: "{{ creds_path | default(default_credentials_path) }}"
    driver: "file"
    vault_enc: "{{ vault_encryption }}"
    vault_pass: "{{ vault_pass }}"
  register: auth_variable
  ignore_errors: true
  when: res_grp['credentials'] is defined
  no_log: "{{ not auth_debug }}"

- name: "Set auth_var"
  set_fact:
    auth_var: "{{ auth_variable | default('') }}"
  ignore_errors: true
  when: auth_variable is defined
  no_log: "{{ not auth_debug }}"

- name: "provisioning resource definitions of current group"
  include_tasks: provision_res_defs.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
    res_grp_type: "{{ res_item.2 }}"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) }}"
    - ["{{ res_grp['resource_group_name'] }}"]
    - ["{{ res_grp['resource_group_type'] }}"]
  loop_control:
    loop_var: res_item
  when: state == 'present'

# filter resources by the role type
# teardown the resources by role_type
- name: "teardown gce_eip definitions of current group"
  include_tasks: teardown_res_defs.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
    res_grp_type: "{{ res_item.2 }}"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) |\
       filter_list_by_attr_val('role', 'gcloud_gce_eip') }}"
    - ["{{ res_grp['resource_group_name'] }}"]
    - ["{{ res_grp['resource_group_type'] }}"]
  loop_control:
    loop_var: res_item
  when: state == 'absent'

- name: "teardown gcdns records definitions of current group"
  include_tasks: teardown_res_defs.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
    res_grp_type: "{{ res_item.2 }}"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) |\
       filter_list_by_attr_val('role', 'gcloud_gcdns_record') }}"
    - ["{{ res_grp['resource_group_name'] }}"]
    - ["{{ res_grp['resource_group_type'] }}"]
  loop_control:
    loop_var: res_item
  when: state == 'absent'

- name: "debug state"
  debug:
    var: state

- name: "teardown gce zones definitions of current group"
  include_tasks: teardown_res_defs.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
    res_grp_type: "{{ res_item.2 }}"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) |\
       filter_list_by_attr_val('role', 'gcloud_gcdns_zone') }}"
    - ["{{ res_grp['resource_group_name'] }}"]
    - ["{{ res_grp['resource_group_type'] }}"]
  loop_control:
    loop_var: res_item
  when: state == 'absent'

- name: "teardown gcloud_gcp_compute_router definitions of current group"
  include_tasks: teardown_res_defs.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
    res_grp_type: "{{ res_item.2 }}"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) |\
       filter_list_by_attr_val('role', 'gcloud_gcp_compute_router') }}"
    - ["{{ res_grp['resource_group_name'] }}"]
    - ["{{ res_grp['resource_group_type'] }}"]
  loop_control:
    loop_var: res_item
  when: state == 'absent'

- name: "teardown gce_net instance definitions of current group"
  include_tasks: teardown_res_defs.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
    res_grp_type: "{{ res_item.2 }}"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) |\
       filter_list_by_attr_val('role', 'gcloud_gce_net') }}"
    - ["{{ res_grp['resource_group_name'] }}"]
    - ["{{ res_grp['resource_group_type'] }}"]
  loop_control:
    loop_var: res_item
  when: state == 'absent'

- name: "teardown gce instance definitions of current group"
  include_tasks: teardown_res_defs.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
    res_grp_type: "{{ res_item.2 }}"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) |\
       filter_list_by_attr_val('role', 'gcloud_gce') }}"
    - ["{{ res_grp['resource_group_name'] }}"]
    - ["{{ res_grp['resource_group_type'] }}"]
  loop_control:
    loop_var: res_item
  when: state == 'absent'

- name: "teardown gce_net instance definitions of current group"
  include_tasks: teardown_res_defs.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
    res_grp_type: "{{ res_item.2 }}"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) |\
       filter_list_by_attr_val('role', 'gcloud_gcp_compute_network') }}"
    - ["{{ res_grp['resource_group_name'] }}"]
    - ["{{ res_grp['resource_group_type'] }}"]
  loop_control:
    loop_var: res_item
  when: state == 'absent'
