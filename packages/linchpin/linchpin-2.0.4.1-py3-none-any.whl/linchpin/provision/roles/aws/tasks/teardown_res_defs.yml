- name: "teardown of ec2 resource definitions of current group"
  include_tasks: teardown_aws_ec2.yml
  vars:
    res_def: "{{ res_item.0 }}"
    tp_out: "{{ res_item.1 }}"
    res_grp_name: "{{ res_item.2 }}"
  when: res_item.0['role'] == "aws_ec2"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) }}"
    - "{{ topo_output['instance_ids'] }}"
    - ["{{ res_grp['resource_group_name']  }}"]
  loop_control:
    loop_var: res_item

- name: "teardown of s3 resource def of current group"
  include_tasks: teardown_aws_s3.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
  when: res_item.0['role'] == "aws_s3"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) }}"
    - ["{{ res_grp['resource_group_name']  }}"]
  loop_control:
    loop_var: res_item

- name: "teardown of aws_ec2_key resource def of current group"
  include_tasks: teardown_aws_ec2_key.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
  when: res_item.0['role'] == "aws_ec2_key"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) }}"
    - ["{{ res_grp['resource_group_name']  }}"]
  loop_control:
    loop_var: res_item

- name: "teardown cfn stack resource def of current group"
  include_tasks: teardown_aws_cfn.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
  when: res_item.0['role'] == "aws_cfn"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) }}"
    - ["{{ res_grp['resource_group_name'] }}"]
  loop_control:
    loop_var: res_item

- name: "teardown elb_lb resource def of current group"
  include_tasks: teardown_aws_ec2_elb_lb.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
  when: res_item.0['role'] == "aws_ec2_elb_lb"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) }}"
    - ["{{ res_grp['resource_group_name'] }}"]
  loop_control:
    loop_var: res_item

- name: "teardown security group resource def of current group"
  include_tasks: teardown_aws_sg.yml
  vars:
    res_def: "{{ res_item.0 }}"
    res_grp_name: "{{ res_item.1 }}"
  when: res_item.0['role'] == "aws_sg"
  with_nested:
    - "{{ res_grp['res_defs'] | default(res_grp['resource_definitions']) }}"
    - ["{{ res_grp['resource_group_name'] }}"]
  loop_control:
    loop_var: res_item
