- name: "Teardown of AWS_EC2 Resource"
  ec2:
    aws_access_key: "{{ res_def_item.0 }}"
    aws_secret_key: "{{  res_def_item.1 }}"
    instance_ids: "{{ res_def_item.2 }}"
    state: 'absent'
    region: "{{ res_def_item.3 }}"
    instance_tags:
      name: "{{ res_def_item.8 }}"
    wait: false
  when: res_def_item.4 == res_def_item.5 and res_def_item.6 == "aws_ec2" and
        not res_def_item.7
  with_together:
    - "{{ auth_var['aws_access_key_id'] | default(omit) }}"
    - "{{ auth_var['aws_secret_access_key'] | default(omit) }}"
    - "{{ tp_out['id'] }}"
    - "{{ res_def['region'] }}"
    - "{{ tp_out['tags']['resource_group_name'] }}"
    - "{{ res_grp_name }}"
    - "{{ res_def['role'] }}"
    - "{{ _async }}"
    - "{{ tp_out['tags']['name'] }}"
  loop_control:
    loop_var: res_def_item
  register: output_item
  no_log: "{{ not debug_mode }}"

# following tasks saves the async job details
- name: "Save the job id"
  set_fact:
    topology_outputs_aws_ec2: "{{ topology_outputs_aws_ec2 + [output_item] }}"
  no_log: "{{ not debug_mode }}"
