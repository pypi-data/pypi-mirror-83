- name: "Provisioning AWS_S3 Resource"
  aws_s3:
    aws_access_key: "{{ auth_var['aws_access_key_id'] | default(omit) }}"
    aws_secret_key: "{{ auth_var['aws_secret_access_key'] | default(omit) }}"
    debug_botocore_endpoint_logs: "{{ res_def['debug_botocore_endpoint_logs'] |
                                      default(omit) }}"
    dest: "{{ res_def['dest'] | default(omit) }}"
    dualstack: "{{  es_def['dualstack'] | default(omit) }}"
    encrypt: "{{ res_def['encrypt'] | default(omit) }}"
    encryption_kms_key_id: "{{ res_def['encryption_kms_key_id'] |
                               default(omit) }}"
    encryption_mode: "{{ res_def['encryption_mode'] | default(omit) }}"
    expiration: "{{ res_def['expiration'] | default(omit) }}"
    headers: "{{ res_def['headers'] | default(omit) }}"
    ignore_nonexistent_bucket: "{{ res_def['ignore_nonexistent_bucket'] |
                                   default(omit) }}"
    marker: "{{ res_def['marker'] | default(omit) }}"
    max_keys: "{{ res_def['max_keys'] | default(omit) }}"
    metadata: "{{ res_def['metadata'] | default(omit) }}"
    object: "{{ res_def['metadata'] | default(omit) }}"
    overwrite: "{{ res_def['overwrite'] | default(omit) }}"
    prefix: "{{ res_def['prefix'] | default(omit) }}"
    profile: "{{ res_def['profile'] | default(omit) }}"
    retries: "{{ res_def['retries'] | default(omit) }}"
    rgw: "{{ res_def['rgw'] | default(omit) }}"
    s3_url: "{{ res_def['s3_url'] | default(omit) }}"
    securtity_token: "{{ res_def['securtity_token'] | default(omit) }}"
    src: "{{ res_def['src'] | default(omit) }}"
    validate_certs: "{{ res_def['validate_certs'] | default(omit) }}"
    version: "{{ res_def['version'] | default(omit) }}"
    bucket: "{{ res_def['res_name'] | default(res_def['name']) }}"
    mode: "{{ res_def['mode'] | default('create') }}"
    region: "{{ res_def['region'] }}"
    permission: "{{ res_def['permission']| default(omit) }}"
  when: res_def['role'] == 'aws_s3'
  no_log: "{{ not debug_mode }}"
  register: res_def_output

- name: "Append outputitem to topology_outputs"
  set_fact:
    topology_outputs_aws_s3: "{{ topology_outputs_aws_s3 + [res_def] }}"
  when: res_def_output['changed'] and state == "present"

- name: "Add type to resource"
  set_fact:
    topology_outputs_aws_s3: "{{ topology_outputs_aws_s3 |
                                 add_res_data(lookup('vars', 'role_name'),
                                              res_def['role']) }}"
