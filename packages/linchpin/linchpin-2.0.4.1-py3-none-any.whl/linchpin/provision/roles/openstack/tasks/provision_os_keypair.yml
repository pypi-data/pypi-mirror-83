- name: "provisioning/deprovisioning  keypair"
  os_keypair:
    auth: "{{ auth_var | omit_filter(omit) }}"
    name: "{{ res_def['res_name'] | default(res_def['name']) }}"
    state: "{{ state }}"
    wait: "yes"
  register: res_def_output_nasync
  when: not _async
  no_log: "{{ not debug_mode }}"

- name: "Generate keyfile"
  debug:
    msg: "{{ res_def_output_nasync['key']['private_key'] |
             write_to_file(default_ssh_key_path+'/', res_def['name']+'.key') }}"
  when: state == "present" and
        res_def_output_nasync['changed'] and
        not _async

- name: "Append outputitem to topology_outputs"
  set_fact:
    topology_outputs_os_keypair: "{{ topology_outputs_os_keypair +
                                     [res_def_output_nasync] }}"
  when: state == "present" and
        res_def_output_nasync['changed'] and
        not _async

- name: "Async:: provisioning/deprovisioning  keypair"
  os_keypair:
    auth: "{{ auth_var | omit_filter(omit) }}"
    name: "{{ res_def['res_name'] | default(res_def['name']) }}"
    state: "{{ state }}"
    wait: "yes"
  register: res_def_output_async
  async: "{{ async_timeout }}"
  poll: 0
  when: _async
  no_log: "{{ not debug_mode }}"

- name: 'Async:: Check on keypair create task'
  async_status: jid={{ res_def_output_async['ansible_job_id'] }}
  register: job_result
  until: job_result.finished
  retries: 30
  when: _async

- name: "Async:: Generate keyfile"
  copy:
    content: "{{ job_result['key']['private_key'] }}"
    dest: "{{ default_ssh_key_path }}/{{ res_def['res_name'] |
              default(res_def['name']) }}.key"
    mode: 0644
  when: state == "present" and
        res_def_output_async['changed'] and
        _async
  no_log: "{{ not debug_mode }}"

- name: "Async:: save the job id"
  set_fact:
    topology_job_ids: "{{ topology_job_ids + [ res_def_output_async ] }}"
  when: _async

- name: "Add type to resource"
  set_fact:
    topology_outputs_os_keypair: "{{ topology_outputs_os_keypair |
                                     add_res_data(res_grp_type,
                                                  res_def['role']) }}"
