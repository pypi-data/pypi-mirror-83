[DEFAULT]
pkg = linchpin
default_config_path = ~/.config/linchpin

[lp]
module_folder = library
rundb_conn = {{ workspace }}/.rundb/rundb-::mac::.json

rundb_type = TinyRunDB
rundb_conn_type = file
rundb_schema = {"action": "",
                "inputs": [],
                "outputs": [],
                "cfgs": [],
                "start": "",
                "end": "",
                "rc": 0,
		"hooks": [],
                "uhash": ""}
rundb_hash = sha256
rundb_uhash_length = 6

dateformat = %%m/%%d/%%Y %%I:%%M:%%S %%p
default_pinfile = PinFile

external_providers_path = %(default_config_path)s/linchpin-x
use_rundb_for_actions = False
distill_data = False
distill_on_error = False
use_actual_rcs = False

[evars]
_check_mode = False
_async = False
async_timeout = 1000
default_ssh_key_path = ~/.ssh
debug_mode = False
auth_debug = False
vault_encryption = False
vault_password = ''
async_retries = 60


# NOTE: if either of these change, the value in linchpin/templates must also change
layouts_folder = layouts
topologies_folder = topologies

hooks_folder = hooks
roles_folder = roles
inventories_folder = inventories
resources_folder = resources
schemas_folder = schemas
playbooks_folder = provision

# inputs
default_schemas_path = {{ lp_path }}/defaults/%(schemas_folder)s
default_topologies_path = {{ lp_path }}/defaults/%(topologies_folder)s
default_layouts_path = {{ lp_path }}/defaults/%(layouts_folder)s
default_inventories_path = {{ workspace }}/inventories/
default_roles_path = {{ lp_path }}/%(playbooks_folder)s/%(roles_folder)s

# default credentials data, this path doesn't automatically exist
default_credentials_path = {{ workspace }}/credentials

default_resources_path = {{ workspace }}/%(resources_folder)s

default_delimiter = _

# for 1.0.x compatibility
enable_uhash = False
generate_resources = True

#inventory_path = {{ workspace }}/{{inventories_folder}}/happy.inventory

[init]
source = templates/
pinfile = PinFile

remote = git://github.com/CentOS-PaaS-SIG/linchpin
fetch_ref = master
root = workspaces/dummy
fetch_type = workspace
nocache = True

[distiller]
bkr_server = id,url,system,name
dummy_node: hosts
aws_ec2 = instances.id,instances.public_ip,instances.private_ip,instances.public_dns_name,instances.private_dns_name,instances.tags:name
os_server = servers.id,servers.interface_ip,servers.name,servers.private_v4,servers.public_v4
libvirt_node = name,ip

[fetch]
cache_ws = True
cache_days = 1

[logger]
enable = True
file = linchpin.log
format = %%(levelname)s %%(asctime)s %%(message)s
dateformat = %%m/%%d/%%Y %%I:%%M:%%S %%p
level = logging.DEBUG

[console]
# DO NOT REMOVE. Placeholder only, cannot disable.
enable = True
# logging to the console should also be possible
format = %%(message)s
level = logging.INFO

[hookstates]
up = pre,post,inv
inv = post
destroy = pre,post

[extensions]
playbooks = .yml
inventory = .inventory

[ansible]
console = False
use_shell = False

[states]
# in future each state may have comma separated substates
preup = preup
predestroy = predestroy
postup = postup
postdestroy = postdestroy
postinv = inventory

[hookflags]
no_hooks = False
ignore_failed_hooks = False

[progress_bar]
no_progress = False
