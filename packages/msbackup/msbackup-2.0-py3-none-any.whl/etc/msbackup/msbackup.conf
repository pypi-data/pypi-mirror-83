######################
## MS-BACKUP CONFIG ##
######################

######################################
[DEFAULT]

# Path to backups.
# This dir will be created if it doesn't exist.
# This must be writable by the user the script is running as.
BACKUP_DIR = /var/backups

# Number of archive files to be rotated (default: 0).
# ROTATE =

# Files archiver (default: tar).
# ARCHIVER =

# In progress archive file suffix (default: .in_progress).
# PROGRESS_SUFFIX =

# Archive files encryptor (default: none).
# ENCRYPTOR = gpg

# Command to run compressor util (default: /bin/gzip -q9).
# COMPRESSOR_COMMAND =

# Compressed file suffix (default: .gz).
# COMPRESSOR_SUFFIX =

# Archiving mode {IN_PLACE|IN_TMP_DIR} (default: IN_PLACE)
# ARCHIVE_MODE =

# Folder path for temporary files.
# TMP_DIR =

# Command to run tar archiver (default: /bin/tar --gzip).
# TAR_COMMAND =

# Archive file suffix (defaul: .tar.gz).
# TAR_SUFFIX =

# Command to run GnuPG (default: /usr/bin/gpg).
# GPG_COMMAND =

# Value of '--recipient' parameter of GnuPG.
# GPG_RECIPIENT = backup@compamy.com

# Encrypted archive file suffix (default: .gpg).
# GPG_SUFFIX =

# Group ownership of files and folders.
# OWNER_GROUP =

######################################
[Backend-File]

# Path to backups.
# This dir will be created if it doesn't exist.
# This must be writable by the user the script is running as.
# BACKUP_DIR = host

# Source file or directory to archive.
# SOURCE =

# Archiver will change to directory DIR.
# BASE_DIR =

# Name of archive file without extension.
# ARCHIVE_NAME =

# Exclude files, defined by patterns in list (splitted by qouta).
# Example: EXCLUDE = *.tmp,*.bak,*.in_progress
# EXCLUDE =

# Exclude files, defined by patterns in file.
# Example: EXCLUDE_from = /path/to/exclude.txt
# EXCLUDE_FROM =

######################################
[Backend-Mercurial]

# Path to backups.
# This dir will be created if it doesn't exist.
# This must be writable by the user the script is running as.
# BACKUP_DIR = mercurial

# Optional system user to run backups as.
# If the user the script is running as doesn't match this the script terminates.
# Leave blank to skip check.
# BACKUP_USER = hg

# List of repo names, exluded from backup.
# Example: EXCLUDE = repo1,repo2,repo3
# EXCLUDE =

# Exclude repo names, defined in file.
# Example: EXCLUDE_from = /path/to/exclude.txt
# EXCLUDE_FROM =

# Command to run mercurial util (default: /usr/bin/hg).
# HG_COMMAND =

# Path to root of Mercurial repositories.
# Example: /path/to/repos
# REPOS_DIR = /var/lib/mercurial/repos

######################################
[Backend-Subversion]

# Path to backups.
# This dir will be created if it doesn't exist.
# This must be writable by the user the script is running as.
# BACKUP_DIR = subversion

# Optional system user to run backups as.
# If the user the script is running as doesn't match this the script terminates.
# Leave blank to skip check.
# BACKUP_USER = svn

# List of repo names, exluded from backup.
# Example: EXCLUDE = repo1,repo2,repo3
# EXCLUDE =

# Exclude repo names, defined in file.
# Example: EXCLUDE_from = /path/to/exclude.txt
# EXCLUDE_FROM =

# Command to run svadmin util.
# SVNADMIN_COMMAND = /usr/bin/svnadmin

# Path to root of Subversion repositories.
# Example: /path/to/svn
# REPOS_DIR = /var/lib/svn

######################################
[Backend-PostgreSQL]

# Path to backups.
# This dir will be created if it doesn't exist.
# This must be writable by the user the script is running as.
# BACKUP_DIR = postgresql

# Optional system user to run backups as.
# If the user the script is running as doesn't match this the script terminates.
# Leave blank to skip check.
# BACKUP_USER = postgres

# Optional hostname to adhere to pg_hba policies.
# Will default to "localhost" if none specified.
# HOST =

# Database server port (default: 5432).
# PORT =

# Optional username to connect to database as.
# Will default to "postgres" if none specified.
# USERNAME =

# List of database names, exluded from backup.
# Example: EXCLUDE = db1,db2,db3
# EXCLUDE =

# Exclude database names, defined in file.
# Example: EXCLUDE_from = /path/to/exclude.txt
# EXCLUDE_FROM =

# Format of full database backups - {"plain"|"custom"} (default: "plain").
# BACKUP_FORMAT =

# List of database names, separated by space, for which we only wish to keep
# a backup of the schema, not the data.
# SCHEMA_ONLY_LIST = zabbix

# Command to run PostgreSQL cli (default: /usr/bin/psql).
# PSQL_COMMAND =

# Command to run PostgreSQL dump utility (default: /usr/bin/pg_dump).
# PGDUMP_COMMAND =

######################################
[Backend-SQLite]

# Path to backups.
# This dir will be created if it doesn't exist.
# This must be writable by the user the script is running as.
# BACKUP_DIR = sqlite

# Optional system user to run backups as.
# If the user the script is running as doesn't match this the script terminates.
# Leave blank to skip check.
# BACKUP_USER =

# Command to run SQLite command-line shell (default: /usr/bin/sqlite3)
# SQLITE_COMMAND =

######################################
[Backend-LDAP]

# Path to backups.
# This dir will be created if it doesn't exist.
# This must be writable by the user the script is running as.
# BACKUP_DIR = ldap

# Optional system user to run backups as.
# If the user the script is running as doesn't match this the script terminates.
# Leave blank to skip check.
# BACKUP_USER = root

# Name of archive file without extension.
# ARCHIVE_NAME =

# Command to run OpenLDAP command-line util (default: /usr/sbin/slapcat).
# SLAPCAT_COMMAND =

# Path to OpenLDAP config directory (default: /etc/ldap/slapd.d).
# LDAP_CONF_DIR =

######################################
[Backend-MongoDB]

# Path to backups.
# This dir will be created if it doesn't exist.
# This must be writable by the user the script is running as.
# BACKUP_DIR = mongodb

# Name of archive file without extension.
# ARCHIVE_NAME =

# URI connection string to connect to the MongoDB deployment.
# URI =

# Resolvable hostname for the mongod to which to connect.
# HOST =

# TCP port on which the MongoDB instance listens for client connections.
# PORT =

# Username with which to authenticate to a MongoDB database
# that uses authentication.
# USERNAME =

# Password with which to authenticate to a MongoDB database
# that uses authentication.
# PASSWORD =

# Authentication database where the specified USERNAME has been created.
# AUTH_DATABASE =

# Authentication mechanism the mongodump instance uses to authenticate
# to the mongod or mongos.
# AUTH_MECHANISM =

# Database to backup (you cannot specify both DB and URI).
# DATABASE =

# Collection to backup (all collections by default).
# COLLECTION =

# Number of collections mongodump should export in parallel (default: 4).
# PARALLEL =

# Command to run mongodump util (default: /usr/bin/mongodump).
# MONGODUMP_COMMAND =

######################################
[Backend-KVM]

# Path to backups.
# This dir will be created if it doesn't exist.
# This must be writable by the user the script is running as.
# BACKUP_DIR = kvm

# Optional system user to run backups as.
# If the user the script is running as doesn't match this the script terminates.
# Leave blank to skip check.
# BACKUP_USER = root

######################################
