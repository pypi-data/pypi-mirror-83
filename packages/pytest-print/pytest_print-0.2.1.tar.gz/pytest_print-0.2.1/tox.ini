[tox]
envlist =
    fix
    py39
    py38
    py37
    py36
    py35
    py27
    pypy3
    pypy
    coverage
    pkg_desc
isolated_build = true
skip_missing_interpreters = true
minversion = 3.14.0

[testenv]
description = run the unit tests with pytest under {basepython}
passenv =
    SSL_CERT_FILE
    TOXENV
    http_proxy
    https_proxy
    no_proxy
setenv =
    COVERAGE_PROCESS_START = {toxinidir}/.coveragerc
    _COVERAGE_SRC = {envsitepackagesdir}/pytest_print
    {py27,pypy}: PYTHONWARNINGS = ignore:DEPRECATION::pip._internal.cli.base_command
extras =
    test
commands =
    coverage erase
    coverage run -m pytest \
      --junitxml {toxworkdir}/junit.{envname}.xml \
      {posargs:tests}
    coverage combine
    coverage report --skip-covered --show-missing
    coverage xml -o {toxworkdir}/coverage.{envname}.xml
    coverage html -d {envtmpdir}/htmlcov

[testenv:fix]
description = run static analysis and style check using flake8
passenv =
    {[testenv]passenv}
    HOMEPATH
    PROGRAMDATA
skip_install = true
deps =
    pre-commit>=2
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'print("hint: run {envdir}/bin/pre-commit install to add checks as pre-commit hook")'

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
    generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
passenv =
    {[testenv]passenv}
    DIFF_AGAINST
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage
skip_install = true
deps =
    coverage>=5
    diff_cover>=3
commands =
    coverage combine
    coverage report --skip-covered --show-missing
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    python -m diff_cover.diff_cover_tool --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends =
    py39
    py38
    py37
    py36
    py35
    py27
    pypy3
    pypy

[testenv:pkg_desc]
description = check that the long description is valid
basepython = python3.9
skip_install = true
deps =
    build
    twine>=3
changedir = {toxinidir}
commands =
    python -m build -s -w . -o {envtmpdir}
    twine check {envtmpdir}/*

[testenv:dev]
description = generate a DEV environment
basepython = python3.9
usedevelop = true
extras =
    test
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'

[pytest]
addopts = -ra --showlocals
testpaths = tests
xfail_strict = True
junit_family = xunit2
