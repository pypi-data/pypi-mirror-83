# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['pydantic_fhir']

package_data = \
{'': ['*']}

install_requires = \
['pydantic>=1.5.1,<2.0.0', 'stringcase>=1.2.0,<2.0.0']

setup_kwargs = {
    'name': 'pydantic-fhir',
    'version': '0.0.1a17',
    'description': 'Generated FHIR model for Pydantic.',
    'long_description': 'This stub for FHIR generated by [fhirzeug](https://github.com/skalarsystems/fhirzeug).\n\n# Format\n\nAll profiles are in one file.\n\n# FHIR Specific JSON Representation\n\nGenerally this generated code tries to stick as close as possible to the\n[FHIR JSON spec](https://www.hl7.org/fhir/json.htm). Another important is the\n[FHIR Datatypes spec](https://www.hl7.org/fhir/datatypes.html).\n\n## Empty Strings\n\n> String property values can never be empty. Either the property is absent, or it is present with at\n> least one character of content. - https://www.hl7.org/fhir/STU3/json.html\n\nAdditionally whitespaces are stripped:\n\n> Note: This means that a string that consists only of whitespace could be trimmed to nothing, which\n> would be treated as an invalid element value. Therefore strings SHOULD always contain\n> non-whitespace content. - https://www.hl7.org/fhir/datatypes.html#primitive\n\nThat means empty strings are interpreted as `null` values.\nThis could lead to invalid arrays(`[""]`). This follows the behavior from\n[HAPI](https://hapifhir.io/) and [Vonk](https://fire.ly/products/vonk/vonk-fhir-server/).\n\n## DateTime Values\n\nDatetime values are strings as well. That means an empty string or a string with whitespaces is\nthreaded as a `null` value. Which then is not set at all.\n\n## `null` Values\n\n> Just as in XML, JSON objects and arrays are never empty, and properties never have null values\n> (except for a special case documented below). Omit a property if it is empty -\n> https://www.hl7.org/fhir/json.html#xml\n\nThat means specifically that if a property contains a null value it is like it never has been set.\n\nExample:\n\n```python\n>>> from r4 import Patient\n>>> Patient(name=None).dict()\n{}\n```\n\n## ValueSets and CodeSystems\n\nFHIR Specification provides different ways to define a `ValueSet`. The implementation varies depending on the use case :\n- If a ValueSet is based on a single CodeSystem and this CodeSystem is defined in FHIR, then the ValueSet is validated by an `enum`.\n- If a ValueSet is based on a single CodeSystem, that this CodeSystem is not included in the FHIR specification, but FHIR provides an exhaustive list of possible values, then the ValueSet is validated by a `typing.Literal`.\n- Otherwise, the field is validated by a very permissive regex `[^\\s]+(\\s[^\\s]+)*`.\n',
    'author': 'Skalar Systems',
    'author_email': 'contact@skalarsystems.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/skalarsystems/fhirzeug',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
