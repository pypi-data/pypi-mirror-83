version: 2

jobs:

  32bit-and-parallel:
    docker:
      - image: quay.io/pypa/manylinux1_i686
    steps:
      - checkout
      - run:
          name: Write configuration items to standard location to make sure they are ignored in parallel mode
          command: |
              mkdir -p $HOME/.astropy/config/
              printf "unicode_output = True\nmax_width = 500" > $HOME/.astropy/config/astropy.cfg
      # In addition to testing 32-bit, we also use the 3.6 and 3.7 builds to
      # test the ability to run the test suite in parallel.
      - run:
          name: Install dependencies for Python 3.6
          command: /opt/python/cp36-cp36m/bin/pip install tox
      - run:
          name: Run tests for Python 3.6
          command: /opt/python/cp36-cp36m/bin/python -m tox -e py36-test -- -n=4 --durations=50
      - run:
          name: Install dependencies for Python 3.7
          command: /opt/python/cp37-cp37m/bin/pip install tox
      - run:
          name: Run tests for Python 3.7
          command: /opt/python/cp37-cp37m/bin/python -m tox -e py37-test -- -n=4 --durations=50
      # We use the 3.8 build to check that running tests twice in a row in the
      # same Python session works without issues. This catches cases where
      # running the tests changes the module state permanently. Note that we
      # shouldn't also test the parallel build here since that enforces a degree
      # of isolation of tests which will interfere with what we are trying to do
      # here.
      - run:
          name: Install dependencies for Python 3.8
          command: /opt/python/cp38-cp38/bin/pip install tox
      - run:
          name: Run tests for Python 3.8
          command: /opt/python/cp38-cp38/bin/python -m tox -e py38-test-double

  image-tests-mpl212:
    docker:
      - image: astropy/image-tests-py36-mpl212:1.10
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -e .[test] pytest-mpl
      - run:
          name: Run tests
          command: pytest -P visualization --remote-data=astropy --open-files --mpl --mpl-results-path=$PWD/results -W ignore:np.asscalar
      - store_artifacts:
          path: results

  image-tests-mpl222:
    docker:
      - image: astropy/image-tests-py36-mpl222:1.10
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -e .[test] pytest-mpl
      - run:
          name: Run tests
          command: pytest -P visualization --remote-data=astropy --open-files --mpl --mpl-results-path=$PWD/results -W ignore:np.asscalar
      - store_artifacts:
          path: results

  image-tests-mpl302:
    docker:
      - image: astropy/image-tests-py37-mpl302:1.10
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -e .[test] pytest-mpl
      - run:
          name: Run tests
          command: pytest -P visualization --remote-data=astropy --open-files --mpl --mpl-results-path=$PWD/results -W ignore:np.asscalar
      - store_artifacts:
          path: results

  image-tests-mpl310:
    docker:
      - image: astropy/image-tests-py37-mpl311:1.10
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -e .[test] pytest-mpl
      - run:
          name: Run tests
          command: pytest -P visualization --remote-data=astropy --open-files --mpl --mpl-results-path=$PWD/results -W ignore:np.asscalar
      - store_artifacts:
          path: results

  image-tests-mpldev:
    docker:
      - image: astropy/image-tests-py37-base:1.4
    steps:
      - checkout
      - run:
          name: Install tox
          command: pip3 install tox
      - run:
          name: Run tests
          command: tox -e py37-test-image-mpldev -- -P visualization --remote-data=astropy --open-files --mpl-results-path=$PWD/results -W ignore:np.asscalar
      - store_artifacts:
          path: results

  html-docs:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install apt packages
          command: |
            sudo apt update
            sudo apt install -y graphviz
      - run:
          name: Install Python dependencies
          command: pip install tox --user
      - run:
          name: Make sure style checks pass
          command: tox -e codestyle
      - run:
          name: Build Docs
          command: tox -e build_docs -- -j=4
          environment:
            LC_CTYPE: C
            LC_ALL: C
            LANG: C

      - run:
          name: Prepare for upload
          command: |
            # If it's not a PR, don't upload
            if [ -z "${CIRCLE_PULL_REQUEST}" ]; then
              rm -r docs/_build/html
            else
              # If it is a PR, delete sources and doctrees, because it's a lot
              # of files which we don't really need to upload
              rm -r docs/_build/html/_sources
              rm -r docs/_build/html/_modules
              rm -r docs/_build/html/.doctrees
            fi

      - store_artifacts:
          path: docs/_build/html

      - run:
          name: "Built documentation is available at:"
          command: DOCS_URL="${CIRCLE_BUILD_URL}/artifacts/${CIRCLE_NODE_INDEX}/${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}/docs/_build/html/index.html"; echo $DOCS_URL

workflows:
  version: 2
  tests_and_docs:
    jobs:
      - html-docs
      - 32bit-and-parallel
      - image-tests-mpl212
      - image-tests-mpl222
      - image-tests-mpl302
      - image-tests-mpl310
      - image-tests-mpldev

notify:
  webhooks:
    - url: https://giles.cadair.dev/circleci
