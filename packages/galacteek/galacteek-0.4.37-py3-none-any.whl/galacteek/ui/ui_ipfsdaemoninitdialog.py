# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'galacteek/ui/ipfsdaemoninitdialog.ui'
#
# Created by: PyQt5 UI code generator 5.13.2
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_IPFSDaemonInitDialog(object):
    def setupUi(self, IPFSDaemonInitDialog):
        IPFSDaemonInitDialog.setObjectName("IPFSDaemonInitDialog")
        IPFSDaemonInitDialog.resize(608, 419)
        IPFSDaemonInitDialog.setMaximumSize(QtCore.QSize(16777215, 600))
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(IPFSDaemonInitDialog)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.stack = QtWidgets.QStackedWidget(IPFSDaemonInitDialog)
        self.stack.setObjectName("stack")
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.gridLayout = QtWidgets.QGridLayout(self.page_3)
        self.gridLayout.setObjectName("gridLayout")
        self.errorStatus = QtWidgets.QLabel(self.page_3)
        self.errorStatus.setStyleSheet("color: red;")
        self.errorStatus.setText("")
        self.errorStatus.setObjectName("errorStatus")
        self.gridLayout.addWidget(self.errorStatus, 1, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.page_3)
        font = QtGui.QFont()
        font.setFamily("Montserrat")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("font: 16pt \"Montserrat\";\n"
"font-weight: bold;")
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 2, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gatewayPort = QtWidgets.QSpinBox(self.page_3)
        self.gatewayPort.setMinimum(1024)
        self.gatewayPort.setMaximum(65534)
        self.gatewayPort.setObjectName("gatewayPort")
        self.gridLayout_2.addWidget(self.gatewayPort, 2, 1, 1, 1)
        self.status = QtWidgets.QLabel(self.page_3)
        self.status.setText("")
        self.status.setObjectName("status")
        self.gridLayout_2.addWidget(self.status, 7, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.page_3)
        self.label_5.setObjectName("label_5")
        self.gridLayout_2.addWidget(self.label_5, 2, 0, 1, 1)
        self.swarmPort = QtWidgets.QSpinBox(self.page_3)
        self.swarmPort.setMinimum(1024)
        self.swarmPort.setMaximum(65534)
        self.swarmPort.setObjectName("swarmPort")
        self.gridLayout_2.addWidget(self.swarmPort, 1, 1, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.page_3)
        self.label_4.setObjectName("label_4")
        self.gridLayout_2.addWidget(self.label_4, 1, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem, 5, 1, 1, 1)
        self.profileLowPower = QtWidgets.QCheckBox(self.page_3)
        self.profileLowPower.setObjectName("profileLowPower")
        self.gridLayout_2.addWidget(self.profileLowPower, 5, 0, 1, 1)
        self.okButton = QtWidgets.QPushButton(self.page_3)
        self.okButton.setObjectName("okButton")
        self.gridLayout_2.addWidget(self.okButton, 7, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.page_3)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 0, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.page_3)
        self.label_2.setObjectName("label_2")
        self.gridLayout_2.addWidget(self.label_2, 4, 0, 1, 1)
        self.dataStore = QtWidgets.QComboBox(self.page_3)
        self.dataStore.setObjectName("dataStore")
        self.dataStore.addItem("")
        self.dataStore.addItem("")
        self.gridLayout_2.addWidget(self.dataStore, 4, 1, 1, 1)
        self.keepDaemonRunning = QtWidgets.QCheckBox(self.page_3)
        self.keepDaemonRunning.setObjectName("keepDaemonRunning")
        self.gridLayout_2.addWidget(self.keepDaemonRunning, 6, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem1, 3, 1, 1, 1)
        self.apiPort = QtWidgets.QSpinBox(self.page_3)
        self.apiPort.setMinimum(1024)
        self.apiPort.setMaximum(65534)
        self.apiPort.setObjectName("apiPort")
        self.gridLayout_2.addWidget(self.apiPort, 0, 1, 1, 1)
        self.gridLayout.addLayout(self.gridLayout_2, 3, 0, 1, 1)
        self.stack.addWidget(self.page_3)
        self.verticalLayout_2.addWidget(self.stack)
        self.verticalLayout_3.addLayout(self.verticalLayout_2)

        self.retranslateUi(IPFSDaemonInitDialog)
        self.stack.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(IPFSDaemonInitDialog)

    def retranslateUi(self, IPFSDaemonInitDialog):
        _translate = QtCore.QCoreApplication.translate
        IPFSDaemonInitDialog.setWindowTitle(_translate("IPFSDaemonInitDialog", "IPFS node creation"))
        self.label.setText(_translate("IPFSDaemonInitDialog", "Choose the initialization parameters for the IPFS node"))
        self.label_5.setToolTip(_translate("IPFSDaemonInitDialog", "<html><head/><body><p>The port the IPFS daemon\'s HTTP gateway service will use. Only change this option (port <span style=\" font-weight:600;\">8080</span> by default) if you have a service already using this port.</p></body></html>"))
        self.label_5.setText(_translate("IPFSDaemonInitDialog", "HTTP gateway port"))
        self.label_4.setToolTip(_translate("IPFSDaemonInitDialog", "<html><head/><body><p>The port the IPFS daemon\'s swarm (TCP and QUIC) will use. Only change this option (port <span style=\" font-weight:600;\">4001</span> by default) if you have a service already using this port.</p></body></html>"))
        self.label_4.setText(_translate("IPFSDaemonInitDialog", "Swarm port"))
        self.profileLowPower.setToolTip(_translate("IPFSDaemonInitDialog", "<html><head/><body><p>Reduces <span style=\" font-weight:600;\">daemon overhead</span> on the system. May affect node functionality - performance of content discovery and data fetching may be degraded.</p><p><br/></p></body></html>"))
        self.profileLowPower.setText(_translate("IPFSDaemonInitDialog", "Enable lowpower profile"))
        self.okButton.setText(_translate("IPFSDaemonInitDialog", "OK"))
        self.label_3.setToolTip(_translate("IPFSDaemonInitDialog", "<html><head/><body><p>The port the IPFS daemon\'s API service will use. Only change this option (port 5001 by default) if you have a service already using this port.</p></body></html>"))
        self.label_3.setText(_translate("IPFSDaemonInitDialog", "API port"))
        self.label_2.setToolTip(_translate("IPFSDaemonInitDialog", "<html><head/><body><p>The datastore type to initialize the repository with. <span style=\" font-weight:600;\">flatfs</span> is the most battle-tested and reliable datastore. <span style=\" font-weight:600;\">badgerds </span>is the fastest datastore. Use <span style=\" font-weight:600;\">badgerds</span> if performance, especially when adding many gigabytes of files, is critical</p></body></html>"))
        self.label_2.setText(_translate("IPFSDaemonInitDialog", "IPFS datastore"))
        self.dataStore.setToolTip(_translate("IPFSDaemonInitDialog", "<html><head/><body><p>The datastore type to initialize the repository with. <span style=\" font-weight:600;\">flatfs</span> is the most battle-tested and reliable datastore. <span style=\" font-weight:600;\">badgerds </span>is the fastest datastore. Use <span style=\" font-weight:600;\">badgerds</span> if performance, especially when adding many gigabytes of files, is critical</p></body></html>"))
        self.dataStore.setItemText(0, _translate("IPFSDaemonInitDialog", "flatfs"))
        self.dataStore.setItemText(1, _translate("IPFSDaemonInitDialog", "badgerds"))
        self.keepDaemonRunning.setText(_translate("IPFSDaemonInitDialog", "Keep the IPFS daemon running"))
from . import galacteek_rc
