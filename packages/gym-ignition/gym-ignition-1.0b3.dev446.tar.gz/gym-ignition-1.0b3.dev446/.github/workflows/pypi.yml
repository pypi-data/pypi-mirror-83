name: PyPI CD

# Visit the following page for more details:
# https://packaging.python.org/tutorials/packaging-projects/

on:
  release:
    types:
      - published
      - prereleased
  # Nightly builds
  push:
    branches: devel

jobs:

  test_packages:
    name: Test pre-packaging
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version:
          - 3.8
        package:
          - sdist
          - bdist_wheel

    steps:

      - uses: actions/checkout@master
      - run: git fetch --prune --unshallow

      - name: Setup Environment
        run: |
          echo "::set-env name=CC::gcc"
          echo "::set-env name=CXX::g++"
          echo "::set-env name=PYTHON_VERSION::${{ matrix.python_version }}"
          env

      - name: Setup docker image [master]
        if: |
          github.ref == 'refs/heads/master' ||
          (github.event_name == 'pull_request' && github.event.pull_request.head.ref == 'refs/heads/master')
        run: |
          docker run -d -i --name pypi -v $(pwd):/github -w /github \
            -v /home/runner/work/_temp/:/home/runner/work/_temp/:rw \
            -e PYTHON_VERSION=${{ matrix.python }} -e CC=$CC -e CXX=$CXX \
            diegoferigo/gym-ignition:pypi-master bash

      - name: Setup docker image [other]
        if: |
          (github.event_name == 'push' && github.ref != 'refs/heads/master') ||
          (github.event_name == 'pull_request' && github.event.pull_request.head.ref != 'refs/heads/master')
        run: |
          docker run -d -i --name pypi -v $(pwd):/github -w /github \
            -v /home/runner/work/_temp/:/home/runner/work/_temp/:rw \
            -e PYTHON_VERSION=${{ matrix.python }} -e CC=$CC -e CXX=$CXX \
            diegoferigo/gym-ignition:pypi-devel bash

      - name: Wait entrypoint
        run: sleep 30

      - name: Create ${{ matrix.package }}
        shell: docker exec -i pypi bash -i -e {0}
        run: python setup.py ${{ matrix.package }}

      - name: Install ${{ matrix.package }}
        shell: docker exec -i pypi bash -i -e {0}
        run: |
          cd dist
          ls
          pip -v install *

      - name: Python Tests
        shell: docker exec -i pypi bash -i -e {0}
        run: |
          cd tests
          pytest

  push:
    name: PyPI Release
    if: github.repository == 'robotology/gym-ignition'
    needs:
      - test_packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version:
          - 3.8

    steps:

      - uses: actions/checkout@master
      - run: git fetch --prune --unshallow

      # Validate the last tag accordingly to PEP440
      # From https://stackoverflow.com/a/37972030/12150968
      - name: Check PEP440 compliance
        if: github.event_name != 'push'
        run: |
          last_tag_with_v="$(git describe --abbrev=0 --tags)"
          last_tag=${last_tag_with_v#v}
          rel_regexp='^(\d+!)?(\d+)(\.\d+)+([\.\-\_])?((a(lpha)?|b(eta)?|c|r(c|ev)?|pre(view)?)\d*)?(\.?(post|dev)\d*)?$'
          echo ""
          echo $last_tag
          echo ""
          check-regexp ${rel_regexp} ${last_tag}
          match=$(check-regexp ${rel_regexp} ${last_tag} | grep matches | cut -d ' ' -f 5)
          test $match -eq 1 && true

      - name: Setup Environment
        run: |
          echo "::set-env name=CC::gcc"
          echo "::set-env name=CXX::g++"
          echo "::set-env name=PYTHON_VERSION::${{ matrix.python_version }}"
          env

      - name: Setup docker image [master]
        if: |
          github.ref == 'refs/heads/master' ||
          (github.event_name == 'pull_request' && github.event.pull_request.head.ref == 'refs/heads/master')
        run: |
          docker run -d -i --name pypi -v $(pwd):/github -w /github \
            -v /home/runner/work/_temp/:/home/runner/work/_temp/:rw \
            -e PYTHON_VERSION=${{ matrix.python }} -e CC=$CC -e CXX=$CXX \
            diegoferigo/gym-ignition:pypi-master bash

      - name: Setup docker image [other]
        if: |
          (github.event_name == 'push' && github.ref != 'refs/heads/master') ||
          (github.event_name == 'pull_request' && github.event.pull_request.head.ref != 'refs/heads/master')
        run: |
          docker run -d -i --name pypi -v $(pwd):/github -w /github \
            -v /home/runner/work/_temp/:/home/runner/work/_temp/:rw \
            -e PYTHON_VERSION=${{ matrix.python }} -e CC=$CC -e CXX=$CXX \
            diegoferigo/gym-ignition:pypi-devel bash

      - name: Wait entrypoint
        run: sleep 30

      - name: Create packages
        shell: docker exec -i pypi bash -i -e {0}
        run: python setup.py sdist bdist_wheel

      - name: Rename wheel
        shell: docker exec -i pypi bash -i -e {0}
        run: |
          ls dist/
          find dist/ -type f -name "*.whl" -exec rename.ul linux manylinux1 {} +
          ls dist/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
