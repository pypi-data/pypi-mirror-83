# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class RequiredAddressChild(Model):
    """RequiredAddressChild.

    :param country: The country of the place <span
     class='property-internal'>Required</span> <span
     class='property-internal'>One of US, CA, OTHER </span>
    :type country: str
    :param postal_code: The postal code of the place <span
     class='property-internal'>Must be between 0 and 10 characters</span> <span
     class='property-internal'>Required when Country is set to US, or CA</span>
    :type postal_code: str
    :param address_type_id: The address type identifier
    :type address_type_id: int
    :param line1: The line 1 of the address
    :type line1: str
    :param line2: The line 2 of the address
    :type line2: str
    :param city: The city of the place
    :type city: str
    :param state: The state of the place
    :type state: str
    :param latitude: The latitude of the place
    :type latitude: float
    :param longitude: The longitude of the place
    :type longitude: float
    """

    _validation = {
        'country': {'required': True},
        'postal_code': {'max_length': 10, 'min_length': 0},
    }

    _attribute_map = {
        'country': {'key': 'country', 'type': 'str'},
        'postal_code': {'key': 'postalCode', 'type': 'str'},
        'address_type_id': {'key': 'addressTypeId', 'type': 'int'},
        'line1': {'key': 'line1', 'type': 'str'},
        'line2': {'key': 'line2', 'type': 'str'},
        'city': {'key': 'city', 'type': 'str'},
        'state': {'key': 'state', 'type': 'str'},
        'latitude': {'key': 'latitude', 'type': 'float'},
        'longitude': {'key': 'longitude', 'type': 'float'},
    }

    def __init__(self, country, postal_code=None, address_type_id=None, line1=None, line2=None, city=None, state=None, latitude=None, longitude=None):
        super(RequiredAddressChild, self).__init__()
        self.country = country
        self.postal_code = postal_code
        self.address_type_id = address_type_id
        self.line1 = line1
        self.line2 = line2
        self.city = city
        self.state = state
        self.latitude = latitude
        self.longitude = longitude
