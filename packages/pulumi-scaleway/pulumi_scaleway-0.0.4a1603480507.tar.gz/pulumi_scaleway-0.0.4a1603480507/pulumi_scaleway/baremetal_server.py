# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = ['BaremetalServer']


class BaremetalServer(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 hostname: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 offer: Optional[pulumi.Input[str]] = None,
                 organization_id: Optional[pulumi.Input[str]] = None,
                 os: Optional[pulumi.Input[str]] = None,
                 ssh_key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 zone: Optional[pulumi.Input[str]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Creates and manages Scaleway Compute Baremetal servers. For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).

        ## Examples

        ### Basic

        ```python
        import pulumi
        import pulumi_scaleway as scaleway

        main = scaleway.get_account_ssh_key(name="main")
        base = scaleway.BaremetalServer("base",
            zone="fr-par-2",
            offer="GP-BM1-M",
            os="d17d6872-0412-45d9-a198-af82c34d3c5c",
            ssh_key_ids=[main])
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: A description for the server.
        :param pulumi.Input[str] hostname: The hostname of the server.
        :param pulumi.Input[str] name: The name of the server.
        :param pulumi.Input[str] offer: The offer name or UUID of the baremetal server.
               Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-334154) to find the right offer.
        :param pulumi.Input[str] organization_id: `organization_id`) The ID of the organization the server is associated with.
        :param pulumi.Input[str] os: The UUID of the os to install on the server.
               Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-87598a) to find the right OS ID.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ssh_key_ids: List of SSH keys allowed to connect to the server.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tags: The tags associated with the server.
        :param pulumi.Input[str] zone: `zone`) The zone in which the server should be created.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['description'] = description
            __props__['hostname'] = hostname
            __props__['name'] = name
            if offer is None:
                raise TypeError("Missing required property 'offer'")
            __props__['offer'] = offer
            __props__['organization_id'] = organization_id
            if os is None:
                raise TypeError("Missing required property 'os'")
            __props__['os'] = os
            if ssh_key_ids is None:
                raise TypeError("Missing required property 'ssh_key_ids'")
            __props__['ssh_key_ids'] = ssh_key_ids
            __props__['tags'] = tags
            __props__['zone'] = zone
            __props__['domain'] = None
            __props__['ips'] = None
            __props__['offer_id'] = None
            __props__['os_id'] = None
        super(BaremetalServer, __self__).__init__(
            'scaleway:index/baremetalServer:BaremetalServer',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[str]] = None,
            domain: Optional[pulumi.Input[str]] = None,
            hostname: Optional[pulumi.Input[str]] = None,
            ips: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BaremetalServerIpArgs']]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            offer: Optional[pulumi.Input[str]] = None,
            offer_id: Optional[pulumi.Input[str]] = None,
            organization_id: Optional[pulumi.Input[str]] = None,
            os: Optional[pulumi.Input[str]] = None,
            os_id: Optional[pulumi.Input[str]] = None,
            ssh_key_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            zone: Optional[pulumi.Input[str]] = None) -> 'BaremetalServer':
        """
        Get an existing BaremetalServer resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: A description for the server.
        :param pulumi.Input[str] domain: The domain of the server.
        :param pulumi.Input[str] hostname: The hostname of the server.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BaremetalServerIpArgs']]]] ips: (List of) The IPs of the server.
        :param pulumi.Input[str] name: The name of the server.
        :param pulumi.Input[str] offer: The offer name or UUID of the baremetal server.
               Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-334154) to find the right offer.
        :param pulumi.Input[str] offer_id: The ID of the offer.
        :param pulumi.Input[str] organization_id: `organization_id`) The ID of the organization the server is associated with.
        :param pulumi.Input[str] os: The UUID of the os to install on the server.
               Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-87598a) to find the right OS ID.
        :param pulumi.Input[str] os_id: The ID of the os.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ssh_key_ids: List of SSH keys allowed to connect to the server.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tags: The tags associated with the server.
        :param pulumi.Input[str] zone: `zone`) The zone in which the server should be created.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["description"] = description
        __props__["domain"] = domain
        __props__["hostname"] = hostname
        __props__["ips"] = ips
        __props__["name"] = name
        __props__["offer"] = offer
        __props__["offer_id"] = offer_id
        __props__["organization_id"] = organization_id
        __props__["os"] = os
        __props__["os_id"] = os_id
        __props__["ssh_key_ids"] = ssh_key_ids
        __props__["tags"] = tags
        __props__["zone"] = zone
        return BaremetalServer(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        A description for the server.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def domain(self) -> pulumi.Output[str]:
        """
        The domain of the server.
        """
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter
    def hostname(self) -> pulumi.Output[Optional[str]]:
        """
        The hostname of the server.
        """
        return pulumi.get(self, "hostname")

    @property
    @pulumi.getter
    def ips(self) -> pulumi.Output[Sequence['outputs.BaremetalServerIp']]:
        """
        (List of) The IPs of the server.
        """
        return pulumi.get(self, "ips")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the server.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def offer(self) -> pulumi.Output[str]:
        """
        The offer name or UUID of the baremetal server.
        Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-334154) to find the right offer.
        """
        return pulumi.get(self, "offer")

    @property
    @pulumi.getter(name="offerId")
    def offer_id(self) -> pulumi.Output[str]:
        """
        The ID of the offer.
        """
        return pulumi.get(self, "offer_id")

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> pulumi.Output[str]:
        """
        `organization_id`) The ID of the organization the server is associated with.
        """
        return pulumi.get(self, "organization_id")

    @property
    @pulumi.getter
    def os(self) -> pulumi.Output[str]:
        """
        The UUID of the os to install on the server.
        Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-87598a) to find the right OS ID.
        """
        return pulumi.get(self, "os")

    @property
    @pulumi.getter(name="osId")
    def os_id(self) -> pulumi.Output[str]:
        """
        The ID of the os.
        """
        return pulumi.get(self, "os_id")

    @property
    @pulumi.getter(name="sshKeyIds")
    def ssh_key_ids(self) -> pulumi.Output[Sequence[str]]:
        """
        List of SSH keys allowed to connect to the server.
        """
        return pulumi.get(self, "ssh_key_ids")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        The tags associated with the server.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def zone(self) -> pulumi.Output[str]:
        """
        `zone`) The zone in which the server should be created.
        """
        return pulumi.get(self, "zone")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

