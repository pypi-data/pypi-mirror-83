# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pythie_serving.tensorflow_proto.tensorflow.compiler.xla.python.tpu_driver import tpu_service_pb2 as tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2


class CloudTpuDriverStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Open = channel.unary_unary(
                '/tpu_driver.CloudTpuDriver/Open',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.OpenRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.OpenResponse.FromString,
                )
        self.Close = channel.unary_unary(
                '/tpu_driver.CloudTpuDriver/Close',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.CloseRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.CloseResponse.FromString,
                )
        self.Reset = channel.unary_unary(
                '/tpu_driver.CloudTpuDriver/Reset',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.ResetRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.ResetResponse.FromString,
                )
        self.QuerySystemInfo = channel.unary_unary(
                '/tpu_driver.CloudTpuDriver/QuerySystemInfo',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.QuerySystemInfoRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.QuerySystemInfoResponse.FromString,
                )
        self.StreamExecute = channel.stream_stream(
                '/tpu_driver.CloudTpuDriver/StreamExecute',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.StreamRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.StreamResponse.FromString,
                )


class CloudTpuDriverServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Open(self, request, context):
        """Open the driver. If the driver is already open, return an error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Close(self, request, context):
        """Close the driver. Any outstanding requests will be terminated.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
        """Reset the driver. All connected clients will be disconnected.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySystemInfo(self, request, context):
        """Query the driver for current system performance information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamExecute(self, request_iterator, context):
        """Enqueue an operation to be executed when its dependencies are satisfied.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CloudTpuDriverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Open': grpc.unary_unary_rpc_method_handler(
                    servicer.Open,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.OpenRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.OpenResponse.SerializeToString,
            ),
            'Close': grpc.unary_unary_rpc_method_handler(
                    servicer.Close,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.CloseRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.CloseResponse.SerializeToString,
            ),
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.ResetRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.ResetResponse.SerializeToString,
            ),
            'QuerySystemInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySystemInfo,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.QuerySystemInfoRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.QuerySystemInfoResponse.SerializeToString,
            ),
            'StreamExecute': grpc.stream_stream_rpc_method_handler(
                    servicer.StreamExecute,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.StreamRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.StreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tpu_driver.CloudTpuDriver', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CloudTpuDriver(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Open(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tpu_driver.CloudTpuDriver/Open',
            tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.OpenRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.OpenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tpu_driver.CloudTpuDriver/Close',
            tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.CloseRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.CloseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tpu_driver.CloudTpuDriver/Reset',
            tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.ResetRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.ResetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuerySystemInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tpu_driver.CloudTpuDriver/QuerySystemInfo',
            tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.QuerySystemInfoRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.QuerySystemInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamExecute(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/tpu_driver.CloudTpuDriver/StreamExecute',
            tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.StreamRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_python_dot_tpu__driver_dot_tpu__service__pb2.StreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
