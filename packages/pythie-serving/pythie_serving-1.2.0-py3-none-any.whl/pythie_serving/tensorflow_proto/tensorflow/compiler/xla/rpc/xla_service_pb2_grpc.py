# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pythie_serving.tensorflow_proto.tensorflow.compiler.xla import xla_pb2 as tensorflow_dot_compiler_dot_xla_dot_xla__pb2


class XlaServiceStub(object):
    """///////////////////////
    Global data requests
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Unregister = channel.unary_unary(
                '/xla.XlaService/Unregister',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnregisterRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnregisterResponse.FromString,
                )
        self.DeconstructTuple = channel.unary_unary(
                '/xla.XlaService/DeconstructTuple',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.DeconstructTupleRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.DeconstructTupleResponse.FromString,
                )
        self.Unpack = channel.unary_unary(
                '/xla.XlaService/Unpack',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnpackRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnpackResponse.FromString,
                )
        self.GetShape = channel.unary_unary(
                '/xla.XlaService/GetShape',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetShapeRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetShapeResponse.FromString,
                )
        self.GetComputationGraphStats = channel.unary_unary(
                '/xla.XlaService/GetComputationGraphStats',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputationGraphStatsRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputationStatsResponse.FromString,
                )
        self.LoadData = channel.unary_unary(
                '/xla.XlaService/LoadData',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.LoadDataRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.LoadDataResponse.FromString,
                )
        self.TransferToClient = channel.unary_unary(
                '/xla.XlaService/TransferToClient',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToClientRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToClientResponse.FromString,
                )
        self.TransferToServer = channel.unary_unary(
                '/xla.XlaService/TransferToServer',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToServerRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToServerResponse.FromString,
                )
        self.TransferToInfeed = channel.unary_unary(
                '/xla.XlaService/TransferToInfeed',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToInfeedRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToInfeedResponse.FromString,
                )
        self.TransferFromOutfeed = channel.unary_unary(
                '/xla.XlaService/TransferFromOutfeed',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferFromOutfeedRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferFromOutfeedResponse.FromString,
                )
        self.ResetDevice = channel.unary_unary(
                '/xla.XlaService/ResetDevice',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ResetDeviceRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ResetDeviceResponse.FromString,
                )
        self.ComputeConstantGraph = channel.unary_unary(
                '/xla.XlaService/ComputeConstantGraph',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputeConstantGraphRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputeConstantResponse.FromString,
                )
        self.GetDeviceHandles = channel.unary_unary(
                '/xla.XlaService/GetDeviceHandles',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetDeviceHandlesRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetDeviceHandlesResponse.FromString,
                )
        self.CreateChannelHandle = channel.unary_unary(
                '/xla.XlaService/CreateChannelHandle',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CreateChannelHandleRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CreateChannelHandleResponse.FromString,
                )
        self.Compile = channel.unary_unary(
                '/xla.XlaService/Compile',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CompileRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CompileResponse.FromString,
                )
        self.Execute = channel.unary_unary(
                '/xla.XlaService/Execute',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteResponse.FromString,
                )
        self.ExecuteGraphParallel = channel.unary_unary(
                '/xla.XlaService/ExecuteGraphParallel',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteGraphParallelRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteParallelResponse.FromString,
                )
        self.WaitForExecution = channel.unary_unary(
                '/xla.XlaService/WaitForExecution',
                request_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.WaitForExecutionRequest.SerializeToString,
                response_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.WaitForExecutionResponse.FromString,
                )


class XlaServiceServicer(object):
    """///////////////////////
    Global data requests
    """

    def Unregister(self, request, context):
        """Unregisters a global allocation.

        If the handle given is not currently allocated, a NOT_FOUND status is
        returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeconstructTuple(self, request, context):
        """Deconstructs a tuple. Returns a newly created GlobalDataHandle for each
        element in the tuple.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unpack(self, request, context):
        """Unpack requests that a global data handle, with a tuple shape, has global
        data handles created for each of its constituent members. This is the
        equivalent of the "destructuring assignment" present in various programming
        languages.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShape(self, request, context):
        """Requests the shape of the referenced global data.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetComputationGraphStats(self, request, context):
        """Requests the statistics of the given computation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadData(self, request, context):
        """Loads a variable number of values with a given element type from ColumnIO.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferToClient(self, request, context):
        """Transfers the given global data to the client in the form of a Literal.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferToServer(self, request, context):
        """Transfers the given literal to the server to be stored in a global
        allocation, which is returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferToInfeed(self, request, context):
        """Transfers the given literal to the Infeed buffer of the device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferFromOutfeed(self, request, context):
        """Transferred literal from the Outfeed buffer of the device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetDevice(self, request, context):
        """Resets the device, clearing all existing state on the device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ComputeConstantGraph(self, request, context):
        """Computes the value of a constant expression. The request contains the
        computation graph for the constant expression.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceHandles(self, request, context):
        """Requests one or more device handles from the target. The returned device
        handles can be used to specify the device on which to execute computations
        or transfer data.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateChannelHandle(self, request, context):
        """Creates a channel handle that can be used to transfer data between
        two computations via a pair of Send and Recv instructions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Compile(self, request, context):
        """Compiles the provided computation into executable. Returns the handle of
        the executable.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Execute(self, request, context):
        """Invokes the provided executable with the provided global data passed as
        immutable arguments. The request contains the handle to the executable.
        Returns global data output and execution timing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteGraphParallel(self, request, context):
        """Invokes the provided list of computations in parallel with the provided
        global data for each computation. Returns a list of global data output and
        execution timing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WaitForExecution(self, request, context):
        """Waits until the given execution (aysnchronously launched) is complete, and
        returns the global data output.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_XlaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Unregister': grpc.unary_unary_rpc_method_handler(
                    servicer.Unregister,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnregisterRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnregisterResponse.SerializeToString,
            ),
            'DeconstructTuple': grpc.unary_unary_rpc_method_handler(
                    servicer.DeconstructTuple,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.DeconstructTupleRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.DeconstructTupleResponse.SerializeToString,
            ),
            'Unpack': grpc.unary_unary_rpc_method_handler(
                    servicer.Unpack,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnpackRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnpackResponse.SerializeToString,
            ),
            'GetShape': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShape,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetShapeRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetShapeResponse.SerializeToString,
            ),
            'GetComputationGraphStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetComputationGraphStats,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputationGraphStatsRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputationStatsResponse.SerializeToString,
            ),
            'LoadData': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadData,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.LoadDataRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.LoadDataResponse.SerializeToString,
            ),
            'TransferToClient': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferToClient,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToClientRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToClientResponse.SerializeToString,
            ),
            'TransferToServer': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferToServer,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToServerRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToServerResponse.SerializeToString,
            ),
            'TransferToInfeed': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferToInfeed,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToInfeedRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToInfeedResponse.SerializeToString,
            ),
            'TransferFromOutfeed': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferFromOutfeed,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferFromOutfeedRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferFromOutfeedResponse.SerializeToString,
            ),
            'ResetDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetDevice,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ResetDeviceRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ResetDeviceResponse.SerializeToString,
            ),
            'ComputeConstantGraph': grpc.unary_unary_rpc_method_handler(
                    servicer.ComputeConstantGraph,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputeConstantGraphRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputeConstantResponse.SerializeToString,
            ),
            'GetDeviceHandles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceHandles,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetDeviceHandlesRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetDeviceHandlesResponse.SerializeToString,
            ),
            'CreateChannelHandle': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateChannelHandle,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CreateChannelHandleRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CreateChannelHandleResponse.SerializeToString,
            ),
            'Compile': grpc.unary_unary_rpc_method_handler(
                    servicer.Compile,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CompileRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CompileResponse.SerializeToString,
            ),
            'Execute': grpc.unary_unary_rpc_method_handler(
                    servicer.Execute,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteResponse.SerializeToString,
            ),
            'ExecuteGraphParallel': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteGraphParallel,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteGraphParallelRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteParallelResponse.SerializeToString,
            ),
            'WaitForExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.WaitForExecution,
                    request_deserializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.WaitForExecutionRequest.FromString,
                    response_serializer=tensorflow_dot_compiler_dot_xla_dot_xla__pb2.WaitForExecutionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'xla.XlaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class XlaService(object):
    """///////////////////////
    Global data requests
    """

    @staticmethod
    def Unregister(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/Unregister',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnregisterRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnregisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeconstructTuple(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/DeconstructTuple',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.DeconstructTupleRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.DeconstructTupleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unpack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/Unpack',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnpackRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.UnpackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetShape(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/GetShape',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetShapeRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetShapeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetComputationGraphStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/GetComputationGraphStats',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputationGraphStatsRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputationStatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/LoadData',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.LoadDataRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.LoadDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferToClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/TransferToClient',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToClientRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferToServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/TransferToServer',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToServerRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferToInfeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/TransferToInfeed',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToInfeedRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferToInfeedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferFromOutfeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/TransferFromOutfeed',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferFromOutfeedRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.TransferFromOutfeedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/ResetDevice',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ResetDeviceRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ResetDeviceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ComputeConstantGraph(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/ComputeConstantGraph',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputeConstantGraphRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ComputeConstantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceHandles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/GetDeviceHandles',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetDeviceHandlesRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.GetDeviceHandlesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateChannelHandle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/CreateChannelHandle',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CreateChannelHandleRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CreateChannelHandleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Compile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/Compile',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CompileRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.CompileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Execute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/Execute',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteGraphParallel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/ExecuteGraphParallel',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteGraphParallelRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.ExecuteParallelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WaitForExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xla.XlaService/WaitForExecution',
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.WaitForExecutionRequest.SerializeToString,
            tensorflow_dot_compiler_dot_xla_dot_xla__pb2.WaitForExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
