Metadata-Version: 2.1
Name: fringe-connector
Version: 0.0.105
Summary: Suite of prebuilt connectors to other APIs
Home-page: https://pypi.org/project/insomnyak-connector/
Author: Rene Serulle
Author-email: rene@insomnyak.com
License: UNKNOWN
Keywords: gcp gsuite gmail gsheets bigquery gdrive
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 3 - Alpha
Requires-Python: >=3.7.4
Description-Content-Type: text/markdown
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: google-api-python-client
Requires-Dist: google-auth-httplib2
Requires-Dist: google-auth-oauthlib
Requires-Dist: google-cloud-storage
Requires-Dist: google-cloud-bigquery
Requires-Dist: google-cloud-bigquery-storage
Requires-Dist: selenium

# Fringe API Connectors
This API package GSuite and GCP API connections into classes with simpler executions. 

## Requirements
- Oauth Credentials for GSuite services
- Service Account for GCP services

## Defaults
- scopes:
```python
scopes = [
    'https://www.googleapis.com/auth/drive',
    'https://www.googleapis.com/auth/drive.file',
    'https://www.googleapis.com/auth/spreadsheets',
    'https://mail.google.com/'
]
```

## Classes & Functions
### import fringe_connector.api
- `GSuite()` - authenticates using the Oauth credentials .json file
- `GSheets()`- creates service using GSuite class upon instantiation
    - `get()`
    - `update()`
    - `getColumnNumber()`
    - `getIndexesFromRange()`
    - `create()`
- `GMail()` - creates service using GSuite class upon instantiation
    - `fetchEmails()`
    - `sendEmail()`
- `GDrive()`- creates service using GSuite class upon instantiation
    - `moveFile()`
    - `uploadFile()`
- `GSlides()` - creates service using GSuite class upon instantiation
- `BigQuery()` creates service using Service Account .json upon instantiation
    - `loadTable()` - creates table with data
    - `createTable()` - creates an empty table
    - `query()` - custom defined query. Returns results of query or loads results at the defined destination table
    - `updateSchema()` - updates schema of table
    - `getTableProperties()` - returns parsed table properties
    - `deleteTable()`
    - `copyTable()`
    - `deleteDataset()`
    - `createDataset()`
    - `getDatasetTables()`

### import fringe_web_driver
- `WebDriver()` - default instantiation with a crome web driver. Requires a chrome web driver in PATH.
    - `quit()`
    - `downloadFile()` - works with chrome web driver. Buggy with Firefox web driver. Returns the filename of the downloaded file. 


