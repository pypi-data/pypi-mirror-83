[metadata]
name = gala
author = Adrian M. Price-Whelan
author_email = adrianmpw@gmail.com
description = Galactic dynamics in Python
long_description = file: README.rst
license = MIT
license_file = LICENSE
url = http://gala.adrian.pw/
edit_on_github = False
github_project = adrn/gala
python_requires = ">=3.7"

[options]
zip_safe = False
packages = find:
install_requires = 
	numpy
	astropy>=4.0
	pyyaml
	cython
	scipy
python_requires = >=3.7
setup_requires = 
	setuptools_scm
	extension-helpers

[options.package_data]
* = *.c
gala = extra_compile_macros.h, cconfig.pyx
gala.coordinates.tests = *.txt, *.npy, SgrCoord_data
gala.dynamics = */*.pyx, */*.pxd, */*.h, nbody/nbody_helper.h
gala.integrate = */*.pyx, */*.pxd, cyintegrators/*.c, cyintegrators/dopri/*.c, cyintegrators/dopri/*.h
gala.potential = src/funcdefs.h, potential/src/cpotential.h, frame/src/cframe.h, */*.pyx, */*.pxd, scf/tests/data/*, potential/tests/*.yml

[options.extras_require]
all = 
	matplotlib
	h5py
	sympy
	numexpr
	galpy
test = 
	pytest
	pytest-astropy
	matplotlib
	h5py
	sympy
	numexpr
docs = 
	sphinx-astropy
	matplotlib
	h5py
	sympy
	numexpr
	tqdm
	IPython
	jupyter_client
	ipykernel
	nbsphinx

[tool:pytest]
testpaths = "gala" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[flake8]
exclude = extern,sphinx,*parsetab.py,astropy_helpers,ah_bootstrap.py,conftest.py,docs/conf.py,setup.py

[pycodestyle]
exclude = extern,sphinx,*parsetab.py,astropy_helpers,ah_bootstrap.py,conftest.py,docs/conf.py,setup.py

[coverage:run]
omit = 
	gala/_astropy_init*
	gala/conftest*
	gala/cython_version*
	gala/setup_package*
	gala/*/setup_package*
	gala/*/*/setup_package*
	gala/tests/*
	gala/*/tests/*
	gala/*/*/tests/*
	gala/version*
	gala/dynamics/_genfunc/*
	gala/coordinates/poincarepolar.py
	gala/coordinates/velocity_frame_transforms.py
	*/gala/_astropy_init*
	*/gala/conftest*
	*/gala/cython_version*
	*/gala/setup_package*
	*/gala/*/setup_package*
	*/gala/*/*/setup_package*
	*/gala/tests/*
	*/gala/*/tests/*
	*/gala/*/*/tests/*
	*/gala/version*
	*/gala/dynamics/_genfunc/*
	*/gala/coordinates/poincarepolar.py
	*/gala/coordinates/velocity_frame_transforms.py

[coverage:report]
exclude_lines = 
	pragma: no cover
	except ImportError
	raise AssertionError
	raise NotImplementedError
	def main\(.*\):
	pragma: py{ignore_python_version}
	def _ipython_key_completions_

[egg_info]
tag_build = 
tag_date = 0

