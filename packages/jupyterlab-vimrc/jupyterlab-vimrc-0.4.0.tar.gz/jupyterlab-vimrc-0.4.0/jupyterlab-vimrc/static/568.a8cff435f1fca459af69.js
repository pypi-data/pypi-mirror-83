(self.webpackChunkjupyterlab_vimrc=self.webpackChunkjupyterlab_vimrc||[]).push([[568],{568:(e,a,r)=>{"use strict";r.r(a),r.d(a,{default:()=>t});var m=r(536),i=r(201);const o="jupyterlab-vimrc:vimrc",t={id:o,autoStart:!0,requires:[i.ISettingRegistry,m.ICodeMirror],activate:async(e,a,r)=>{await r.ensureVimKeymap();const m=r.CodeMirror;function i(e){m.Vim.mapclear("normal"),m.Vim.mapclear("visual"),m.Vim.mapclear("insert"),e.get("imap").composite.forEach((e=>{e[0]&&e[1]&&m.Vim.map(e[0],e[1],"insert")})),e.get("nmap").composite.forEach((e=>{e[0]&&e[1]&&m.Vim.map(e[0],e[1],"normal")})),e.get("vmap").composite.forEach((e=>{e[0]&&e[1]&&m.Vim.map(e[0],e[1],"visual")})),e.get("inoremap").composite.forEach((e=>{e[0]&&e[1]&&m.Vim.noremap(e[0],e[1],"insert")})),e.get("nnoremap").composite.forEach((e=>{e[0]&&e[1]&&m.Vim.noremap(e[0],e[1],"normal")})),e.get("vnoremap").composite.forEach((e=>{e[0]&&e[1]&&m.Vim.noremap(e[0],e[1],"visual")}))}Promise.all([e.restored,a.load(o)]).then((([,e])=>{i(e),e.changed.connect(i)}))}}}}]);