#! /usr/bin/env python
try:
	import pytest
	from xiaobaiauto2.xiaobaiauto2 import api_action, PUBLIC_VARS
except ImportError as e:
	import os
	os.popen("pip install pytest")

@pytest.mark.run(order=1)                def test_xiaobai_api_1():                	# 测试前数据准备                	headers = {'Referer': 'https://www.baidu.com/', 'Cache-Control': 'max-age=0', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'Accept-Language': 'zh-Hans-CN,zh-Hans;q=0.5', 'Content-Type': 'application/x-www-form-urlencoded', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18363', 'Accept-Encoding': 'gzip, deflate, br', 'Host': 'passport.baidu.com', 'Content-Length': '4234', 'Connection': 'Keep-Alive', 'Cookie': 'H_PS_PSSID=32816_1458_32873_7566_31254_32705_32231_7517_7605_2453_32115; BDRCVFR[w2jhEs_Zudc]=I67x6TjHwwYf0; delPer=0; BAIDUID=99E8A3B98486CB4190C0F99526B782ED:FG=1; BIDUPSID=99E8A3B98486CB4111DBC53C618FCEEB; PSTM=1583675998; cart_id=646146317; HOSUPPORT=1; HOSUPPORT_BFESS=1; pplogid=5415VUEYFqKmzEHzz3tRBpexL9aUZqix%2BKycNU3XTov6ieqQcCbWZ5gfAzBCVGlr3VeG%2FHW9HCrxM%2FxZDVww05nb%2F7vLfcJMY4bLmKFagvhVsvI%3D; pplogid_BFESS=5415VUEYFqKmzEHzz3tRBpexL9aUZqix%2BKycNU3XTov6ieqQcCbWZ5gfAzBCVGlr3VeG%2FHW9HCrxM%2FxZDVww05nb%2F7vLfcJMY4bLmKFagvhVsvI%3D; UBI=fi_PncwhpxZ%7ETaJczxVnnj%7EtjPx8S-P75uLsovxZknjiSbP-v8ftVgHtE2q7lX6HlZf%7EYSKLGCW3u-9S5q4; UBI_BFESS=fi_PncwhpxZ%7ETaJczxVnnj%7EtjPx8S-P75uLsovxZknjiSbP-v8ftVgHtE2q7lX6HlZf%7EYSKLGCW3u-9S5q4'}                	url = 'https://passport.baidu.com/v2/api/?login'                 	data = 'staticpage=https://www.baidu.com/cache/user/html/v3Jump.html&charset=utf-8&token=4c8aec8b371ad1295f70ed4732b17dd0&tpl=mn&subpro=&apiver=v3&tt=1603340102780&codestring=&safeflg=0&u=https://www.baidu.com/&isPhone=&detect=1&gid=9104821-DB9A-46AE-A619-0973EE7A9C8F&quick_user=0&logintype=dialogLogin&logLoginType=pc_loginDialog&idc=&loginmerge=true&mkey=&splogin=rate&username=17698355858&password=FF8gPm918je4Q/Kn7dVX6b6G5tMGEEjelpAxmq0GHFWNc5+bLbemWT58hopVb84j8Rxwd3UhqL37sVfyqB12drf/5T9jgAYDcJjp0IED+FtCY4uShgjF2InksBVa/g7OrDFtvSMtjW27ebVQoK2D7KkcAan+tpXAn2uAbsHyKyw=&mem_pass=on&rsakey=ogJ3L3yFhRiXYNJZ5MD5zhIJHTb3nZ3i&crypttype=12&ppui_logintime=19459&countrycode=&fp_uid=&fp_info=&loginversion=v4&supportdv=1&ds=YHIdD8xZ6QuJKxLJFI2I5x9gO/TdtstJvYG62ddngfNowoTj0LER/9JGdAdrZGh2GJX3vhMTfzzyv5pgVffTFnVE8el4wlsQPuWoWh8nVR2lEz9UUfC4H7MPmE6TncHdc685zYOW/l5Uu0BOfQSRgFkXbbR/sZjBG5kZ043nzkuuM7NHkExgYTU+nzLmbXjI3+Yx8jydcCC7gKCv1GaP2DAtQWEtOym/huFaglUOC1kdCnhrNO41WsmiE/oQlCatoIBv3/sHRhVmvlDgex6Axcev+1agQabLHEftHDUfl+5C8nYFhogldtRuaLY34wJv604qI32XCUvoSJEGrZwCMAlXStluLypEDqqiCohNKZzg8PyhmRBeTF8ZLQLbDiIn27UPl6Tv2BhmSmmD01YizHSYHCS9dxnHQhUoMFWRccv5ZwkZLY+5TcMSK+GnlWciBwMhhuQd7r90eTUp+41ucucueX5rJQo0aZbXMRmrZqOPTy2n6zYY1T5DadR5SIlmFsbwjKbASiWlPcV3EuPpQOnx1QXiWKcej/2pXuU80rNQ4jNr5rfQ06UWUnATyyvNCVXQznS5ig6D35lN1SvYWeMZW3jZ1pW/+GEbBNJoAGe7N42bg4i6W2T/hduPN18K3KH7zIU1I0MdKiashetn4CmUbWDqqjyAGlUXuw3DZo2oWcI4qeogzsb1NbzNEZklWFE/Lpnk2/peadXMLZQEmJLVnIgXDgaCVl6fDFfLlk82R9sX1mpWw91z85cO+aDD8oGnp+U1rM97DMLo5UIlu4ZRzTdvSZa6JKULz0k/rWdAh6cJ5c7nIS+zgxN//NbEZ/oGHOWCdsrBfgm5ktocdbkv2PibdsNexf6QVznyYYInS98xZ0XC0hElZES27XmHRbYjX4vyNZEbIoPHFU1VeBtT2rAKIi/5///RdbjxHy3W+Ne+1oUrQ2VII5pQTWHrHv201n3Kjuw51uXG0dNfI47iAFOMQnr88YOk5Vtes9m3Cja1lpHe2TCB+KKkNkT/90pYj6DwpXssrFevO5jY4g==&tk=5415VUEYFqKmzEHzz3tRBpexL9aUZqix+KycNU3XTov6ieqQcCbWZ5gfAzBCVGlr3VeG/HW9HCrxM/xZDVww05nb/7vLfcJMY4bLmKFagvhVsvI=&dv=tk0.95850879597429821603340084186@YYg0VuBk3b7m~nonO5n3rBpJgonJhS7GrSpXsUFp6AN8JH4kvy7GNWSknJ4kqbsvrADJ6hGsgSnrBopUv~pJgJIWsfGCreF9y~7k7X7pyJBmyy4rDhG3P9onJSpJhGnrx~7sgSPpBHI3OTQ8nb7GqO7GrxBGIb7m~nonO5n3rBpJgonJhS7GrSpXsUFp6AN8JH4kv~7UI-SknW4kqbsvrADJ6hGsgSnrBopUv~pJgJIWsfGCreF9y~7Gn-7Vy_eg0weBR2J4k2f7fyz7k7bSknXA9y~AGqb7RIy71~nonO5n3rBpJgonJhS7GrSpXrfNWg3Fpy-7RvbBkn~4k7yAG2bSk7-A9yJ7Gnb7U3U79~nonO5n3rBpJgonJhS7GrSpWFYQXDHIHrfNWg3Fn6-QVy-BU7b7GvJ4koUBG7bSq__uvvMBvw-Io3Shwgh79yf4kIyFglPuby4R3JAknyAkIOBG3XBk2OAk2~BRqU7Uoy7kL-7GLWhglM5D-I57a4fgXPXIiNCrZF5niNWge4f~JQCDHFCHiF8o_Ggd7G2J4kvbAGvy4knUB9y~7RLy4kIf7my~7RLy4k3-71yW7Uo_&fuid=FOCoIC3q5fKa8fgJnwzbE67EJ49BGJeplOzf+4l4EOvDuu2RXBRv6R3A1AZMa49I27C0gDDLrJyxcIIeAeEhD8JYsoLTpBiaCXhLqvzbzmvy3SeAW17tKgNq/Xx+RgOdb8TWCFe62MVrDTY6lMf2GrfqL8c87KLF2qFER3obJGliU+xLh54mMmrep2o8Gh8HnAICVAQ7s/o3vCoSiZPICl/+dB549DRrXLbGRzNlShfBQc5dMYzYfwHdvDhpEdnq1diI7J8qyHcIVkKFiLhje+/0ZTY055fWaxJm2IgUuWqv6HStf12QQ6W3L29guUmjNb9osI9d3WjPvWlieRiQkLv0lGxeY1eQFMs/4wYiICncQ09vBYID5IwDYjU3VR+OzkB78oVEK6xw0ujjxnTFF+48mQlM7wlXpkfEiRQMJNUo+jBXx8Rq/TnENT1s599b+sOgngvJ64AhZZ8joLooYUU71kNF2dsvqfwovIEcoISEdT1Y3R55LPFbbrg2xVMdAAv3LCf1Y7/fHL3PTSf9vid/u2VLX4h1nBtx8EF07eCMhWVv+2qjbPV7ZhXk3reaWRFEeso3s/Kc9n/UXtUfNU1sHiCdbrCW5yYsuSM9SPGDZsl7FhTAKw7qIu38vFZiq+DRc8Vbf7jOiN9xPe0lOdZHUhGHZ82rL5jTCsILwcRVCndrarbwmu7G154MpYiKmTXZkqV7Alo4QZzicdyMbWvwvmR2/m//YVTM8qeZWgDSHjDmtehgLWM45zARbPujeqU0T92Gmgs89l2htrSKIdOrrdJLlcbaYjLqXHE6phQikEaMzZqE/BLu07fpayyuxK/Xb+YfSKLcb/iYwZLT5H2RIsMY12epFoliGEGFxUntYjbTBZBHk/z//MSV/Uf+yDmkxPhXgnBCGyNtiZwlHE1TFisYnyagYhL372rBAmy+Gj8i5IOxpN+fYPfASBjfqOfGU7CdDITrwRIWSSyppdq7aHN89Oybut+xsc38J6I4Wd2rVi5xrH8hGqvd77OJuzH8X+tb0PV+Xnu3NL1fmqLIh+XcF6fnyPFPUxteQtbtLyi+gq5zowg1oFj8O/L94UUnSLNZA1+CpCIJVSUPOXXv70cfMSn4OrmEd+59Ab34CROfim3rsAsgLyURlANnyp7htlCNGEvBp67WpqZ6qTjgymOnBYuzYFgCuiXNRuGYbl2BH/FCzbmQE59lyoCwCARd+2gYcoj1jwDnmFwagA==&traceid=BA5FB701&callback=parent.bd__pcbs__k6sbt5&time=1603340103&alg=v3&sig=QnQ3YXdDV3E0RktTYlJNVUU3K0hFMDBvc0ZsRGR6S3ZDUjh5ZTRCWENDMWxmclhqRzF5eXB3OWd5SmlKWm1rRg==&elapsed=6&shaOne=00cc18766a9c94905e391a569afb87199a603219'                	api_action(                		method='POST', url=url, data=data, headers=headers, verify=False,                		json_path='', json_assert='', contains_assert='', _re='', _re_var='')                	# 表达式中json_path与json_assert为判断json结果是否符合预期值                	# 表达式中contains_assert为模糊判断返回值是否包含预期结果                	# 表达式中_re与_re_var为提取数据为下游接口提供数据支持


# 使用公共变量的格式：
# PUBLIC_VARS["变量名"][0][0]  获取响应头中第一个匹配值
# PUBLIC_VARS["变量名"][1][0]  获取响应体中第一个匹配值# 脚本使用须知： # pytest -s -v   运行当前目录所有test_*开头的脚本文件# pytest -s -v xxx.py 运行指定脚本文件# pytest -s -v --html=report.html  运行并将结果记录到HTML报告中# pytest其他运行方式参考https://pypi.org/project/xiaobaiauto2或官网说明