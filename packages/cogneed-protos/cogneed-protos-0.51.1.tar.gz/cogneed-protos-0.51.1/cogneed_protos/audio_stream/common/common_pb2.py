# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cogneed-protos/audio-stream/common/common.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from cogneed_protos.audio_stream.common import g711_pb2 as cogneed__protos_dot_audio__stream_dot_common_dot_g711__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='cogneed-protos/audio-stream/common/common.proto',
  package='ai.cogneed.cloud.speech.v1',
  syntax='proto3',
  serialized_options=_b('\n\032ai.cogneed.cloud.speech.v1P\001'),
  serialized_pb=_b('\n/cogneed-protos/audio-stream/common/common.proto\x12\x1a\x61i.cogneed.cloud.speech.v1\x1a-cogneed-protos/audio-stream/common/g711.proto\"\xb4\x01\n\x0b\x41udioFormat\x12\x31\n\x03\x65xt\x18\x01 \x01(\x0e\x32$.ai.cogneed.cloud.speech.v1.AudioExt\x12\x35\n\x05\x63odec\x18\x02 \x01(\x0e\x32&.ai.cogneed.cloud.speech.v1.AudioCodec\x12\x13\n\x0bsample_rate\x18\x03 \x01(\x03\x12\x10\n\x08\x63hannels\x18\x04 \x01(\x05\x12\x14\n\x0csample_width\x18\x05 \x01(\x05\".\n\x0bModelConfig\x12\x10\n\x08use_case\x18\x01 \x01(\t\x12\r\n\x05major\x18\x02 \x01(\t\"\x8d\x01\n\tAudioInfo\x12\x39\n\x06\x66ormat\x18\x01 \x01(\x0b\x32\'.ai.cogneed.cloud.speech.v1.AudioFormatH\x00\x12=\n\ng711_codec\x18\x02 \x01(\x0e\x32\'.ai.cogneed.audio.decode.g711.G711CodecH\x00\x42\x06\n\x04info\"(\n\x08UserInfo\x12\n\n\x02id\x18\x01 \x01(\t\x12\x10\n\x08use_case\x18\x02 \x01(\t\"#\n\x11PersistenceConfig\x12\x0e\n\x06record\x18\x01 \x01(\x08\"\xd3\x01\n\x12InitSessionRequest\x12\x37\n\tuser_info\x18\x01 \x01(\x0b\x32$.ai.cogneed.cloud.speech.v1.UserInfo\x12\x39\n\naudio_info\x18\x02 \x01(\x0b\x32%.ai.cogneed.cloud.speech.v1.AudioInfo\x12I\n\x12persistence_config\x18\x03 \x01(\x0b\x32-.ai.cogneed.cloud.speech.v1.PersistenceConfig\"9\n\x11\x44\x65tectionResponse\x12\x13\n\x0bmillisecond\x18\x01 \x01(\x03\x12\x0f\n\x07keyword\x18\x02 \x01(\t\"\x1c\n\tAudioBlob\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c*8\n\x08\x41udioExt\x12\x08\n\x04WEBM\x10\x00\x12\x07\n\x03MP3\x10\x01\x12\x07\n\x03WAV\x10\x02\x12\x07\n\x03OGG\x10\x03\x12\x07\n\x03RAW\x10\x04*g\n\nAudioCodec\x12\x08\n\x04OPUS\x10\x00\x12\n\n\x06VORBIS\x10\x01\x12\x0e\n\nSIGNED_PCM\x10\x02\x12\x10\n\x0cUNSIGNED_PCM\x10\x03\x12\r\n\tFLOAT_PCM\x10\x04\x12\x08\n\x04ULAW\x10\x05\x12\x08\n\x04\x41LAW\x10\x06*C\n\nStatusCode\x12\x06\n\x02OK\x10\x00\x12\x10\n\x0cSERVER_ERROR\x10\x01\x12\x1b\n\x17SESSION_DOES_NOT_EXISTS\x10\x02\x42\x1e\n\x1a\x61i.cogneed.cloud.speech.v1P\x01\x62\x06proto3')
  ,
  dependencies=[cogneed__protos_dot_audio__stream_dot_common_dot_g711__pb2.DESCRIPTOR,])

_AUDIOEXT = _descriptor.EnumDescriptor(
  name='AudioExt',
  full_name='ai.cogneed.cloud.speech.v1.AudioExt',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='WEBM', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MP3', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WAV', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OGG', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RAW', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=883,
  serialized_end=939,
)
_sym_db.RegisterEnumDescriptor(_AUDIOEXT)

AudioExt = enum_type_wrapper.EnumTypeWrapper(_AUDIOEXT)
_AUDIOCODEC = _descriptor.EnumDescriptor(
  name='AudioCodec',
  full_name='ai.cogneed.cloud.speech.v1.AudioCodec',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OPUS', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VORBIS', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SIGNED_PCM', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNSIGNED_PCM', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_PCM', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ULAW', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALAW', index=6, number=6,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=941,
  serialized_end=1044,
)
_sym_db.RegisterEnumDescriptor(_AUDIOCODEC)

AudioCodec = enum_type_wrapper.EnumTypeWrapper(_AUDIOCODEC)
_STATUSCODE = _descriptor.EnumDescriptor(
  name='StatusCode',
  full_name='ai.cogneed.cloud.speech.v1.StatusCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SERVER_ERROR', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SESSION_DOES_NOT_EXISTS', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1046,
  serialized_end=1113,
)
_sym_db.RegisterEnumDescriptor(_STATUSCODE)

StatusCode = enum_type_wrapper.EnumTypeWrapper(_STATUSCODE)
WEBM = 0
MP3 = 1
WAV = 2
OGG = 3
RAW = 4
OPUS = 0
VORBIS = 1
SIGNED_PCM = 2
UNSIGNED_PCM = 3
FLOAT_PCM = 4
ULAW = 5
ALAW = 6
OK = 0
SERVER_ERROR = 1
SESSION_DOES_NOT_EXISTS = 2



_AUDIOFORMAT = _descriptor.Descriptor(
  name='AudioFormat',
  full_name='ai.cogneed.cloud.speech.v1.AudioFormat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ext', full_name='ai.cogneed.cloud.speech.v1.AudioFormat.ext', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='codec', full_name='ai.cogneed.cloud.speech.v1.AudioFormat.codec', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sample_rate', full_name='ai.cogneed.cloud.speech.v1.AudioFormat.sample_rate', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channels', full_name='ai.cogneed.cloud.speech.v1.AudioFormat.channels', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sample_width', full_name='ai.cogneed.cloud.speech.v1.AudioFormat.sample_width', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=127,
  serialized_end=307,
)


_MODELCONFIG = _descriptor.Descriptor(
  name='ModelConfig',
  full_name='ai.cogneed.cloud.speech.v1.ModelConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='use_case', full_name='ai.cogneed.cloud.speech.v1.ModelConfig.use_case', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='major', full_name='ai.cogneed.cloud.speech.v1.ModelConfig.major', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=309,
  serialized_end=355,
)


_AUDIOINFO = _descriptor.Descriptor(
  name='AudioInfo',
  full_name='ai.cogneed.cloud.speech.v1.AudioInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='format', full_name='ai.cogneed.cloud.speech.v1.AudioInfo.format', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g711_codec', full_name='ai.cogneed.cloud.speech.v1.AudioInfo.g711_codec', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='info', full_name='ai.cogneed.cloud.speech.v1.AudioInfo.info',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=358,
  serialized_end=499,
)


_USERINFO = _descriptor.Descriptor(
  name='UserInfo',
  full_name='ai.cogneed.cloud.speech.v1.UserInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ai.cogneed.cloud.speech.v1.UserInfo.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='use_case', full_name='ai.cogneed.cloud.speech.v1.UserInfo.use_case', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=501,
  serialized_end=541,
)


_PERSISTENCECONFIG = _descriptor.Descriptor(
  name='PersistenceConfig',
  full_name='ai.cogneed.cloud.speech.v1.PersistenceConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='record', full_name='ai.cogneed.cloud.speech.v1.PersistenceConfig.record', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=543,
  serialized_end=578,
)


_INITSESSIONREQUEST = _descriptor.Descriptor(
  name='InitSessionRequest',
  full_name='ai.cogneed.cloud.speech.v1.InitSessionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_info', full_name='ai.cogneed.cloud.speech.v1.InitSessionRequest.user_info', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='audio_info', full_name='ai.cogneed.cloud.speech.v1.InitSessionRequest.audio_info', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='persistence_config', full_name='ai.cogneed.cloud.speech.v1.InitSessionRequest.persistence_config', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=581,
  serialized_end=792,
)


_DETECTIONRESPONSE = _descriptor.Descriptor(
  name='DetectionResponse',
  full_name='ai.cogneed.cloud.speech.v1.DetectionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='millisecond', full_name='ai.cogneed.cloud.speech.v1.DetectionResponse.millisecond', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='keyword', full_name='ai.cogneed.cloud.speech.v1.DetectionResponse.keyword', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=794,
  serialized_end=851,
)


_AUDIOBLOB = _descriptor.Descriptor(
  name='AudioBlob',
  full_name='ai.cogneed.cloud.speech.v1.AudioBlob',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='ai.cogneed.cloud.speech.v1.AudioBlob.content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=853,
  serialized_end=881,
)

_AUDIOFORMAT.fields_by_name['ext'].enum_type = _AUDIOEXT
_AUDIOFORMAT.fields_by_name['codec'].enum_type = _AUDIOCODEC
_AUDIOINFO.fields_by_name['format'].message_type = _AUDIOFORMAT
_AUDIOINFO.fields_by_name['g711_codec'].enum_type = cogneed__protos_dot_audio__stream_dot_common_dot_g711__pb2._G711CODEC
_AUDIOINFO.oneofs_by_name['info'].fields.append(
  _AUDIOINFO.fields_by_name['format'])
_AUDIOINFO.fields_by_name['format'].containing_oneof = _AUDIOINFO.oneofs_by_name['info']
_AUDIOINFO.oneofs_by_name['info'].fields.append(
  _AUDIOINFO.fields_by_name['g711_codec'])
_AUDIOINFO.fields_by_name['g711_codec'].containing_oneof = _AUDIOINFO.oneofs_by_name['info']
_INITSESSIONREQUEST.fields_by_name['user_info'].message_type = _USERINFO
_INITSESSIONREQUEST.fields_by_name['audio_info'].message_type = _AUDIOINFO
_INITSESSIONREQUEST.fields_by_name['persistence_config'].message_type = _PERSISTENCECONFIG
DESCRIPTOR.message_types_by_name['AudioFormat'] = _AUDIOFORMAT
DESCRIPTOR.message_types_by_name['ModelConfig'] = _MODELCONFIG
DESCRIPTOR.message_types_by_name['AudioInfo'] = _AUDIOINFO
DESCRIPTOR.message_types_by_name['UserInfo'] = _USERINFO
DESCRIPTOR.message_types_by_name['PersistenceConfig'] = _PERSISTENCECONFIG
DESCRIPTOR.message_types_by_name['InitSessionRequest'] = _INITSESSIONREQUEST
DESCRIPTOR.message_types_by_name['DetectionResponse'] = _DETECTIONRESPONSE
DESCRIPTOR.message_types_by_name['AudioBlob'] = _AUDIOBLOB
DESCRIPTOR.enum_types_by_name['AudioExt'] = _AUDIOEXT
DESCRIPTOR.enum_types_by_name['AudioCodec'] = _AUDIOCODEC
DESCRIPTOR.enum_types_by_name['StatusCode'] = _STATUSCODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AudioFormat = _reflection.GeneratedProtocolMessageType('AudioFormat', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOFORMAT,
  __module__ = 'cogneed_protos.audio_stream.common.common_pb2'
  # @@protoc_insertion_point(class_scope:ai.cogneed.cloud.speech.v1.AudioFormat)
  ))
_sym_db.RegisterMessage(AudioFormat)

ModelConfig = _reflection.GeneratedProtocolMessageType('ModelConfig', (_message.Message,), dict(
  DESCRIPTOR = _MODELCONFIG,
  __module__ = 'cogneed_protos.audio_stream.common.common_pb2'
  # @@protoc_insertion_point(class_scope:ai.cogneed.cloud.speech.v1.ModelConfig)
  ))
_sym_db.RegisterMessage(ModelConfig)

AudioInfo = _reflection.GeneratedProtocolMessageType('AudioInfo', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOINFO,
  __module__ = 'cogneed_protos.audio_stream.common.common_pb2'
  # @@protoc_insertion_point(class_scope:ai.cogneed.cloud.speech.v1.AudioInfo)
  ))
_sym_db.RegisterMessage(AudioInfo)

UserInfo = _reflection.GeneratedProtocolMessageType('UserInfo', (_message.Message,), dict(
  DESCRIPTOR = _USERINFO,
  __module__ = 'cogneed_protos.audio_stream.common.common_pb2'
  # @@protoc_insertion_point(class_scope:ai.cogneed.cloud.speech.v1.UserInfo)
  ))
_sym_db.RegisterMessage(UserInfo)

PersistenceConfig = _reflection.GeneratedProtocolMessageType('PersistenceConfig', (_message.Message,), dict(
  DESCRIPTOR = _PERSISTENCECONFIG,
  __module__ = 'cogneed_protos.audio_stream.common.common_pb2'
  # @@protoc_insertion_point(class_scope:ai.cogneed.cloud.speech.v1.PersistenceConfig)
  ))
_sym_db.RegisterMessage(PersistenceConfig)

InitSessionRequest = _reflection.GeneratedProtocolMessageType('InitSessionRequest', (_message.Message,), dict(
  DESCRIPTOR = _INITSESSIONREQUEST,
  __module__ = 'cogneed_protos.audio_stream.common.common_pb2'
  # @@protoc_insertion_point(class_scope:ai.cogneed.cloud.speech.v1.InitSessionRequest)
  ))
_sym_db.RegisterMessage(InitSessionRequest)

DetectionResponse = _reflection.GeneratedProtocolMessageType('DetectionResponse', (_message.Message,), dict(
  DESCRIPTOR = _DETECTIONRESPONSE,
  __module__ = 'cogneed_protos.audio_stream.common.common_pb2'
  # @@protoc_insertion_point(class_scope:ai.cogneed.cloud.speech.v1.DetectionResponse)
  ))
_sym_db.RegisterMessage(DetectionResponse)

AudioBlob = _reflection.GeneratedProtocolMessageType('AudioBlob', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOBLOB,
  __module__ = 'cogneed_protos.audio_stream.common.common_pb2'
  # @@protoc_insertion_point(class_scope:ai.cogneed.cloud.speech.v1.AudioBlob)
  ))
_sym_db.RegisterMessage(AudioBlob)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
