.\" Man page generated from reStructuredText.
.
.TH GIT-CRECORD 1 "2016-12-25" "0.1" "Git"
.SH NAME
git-crecord \- interactively select changes to commit or stage
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBgit crecord\fP [\-h]
.sp
\fBgit crecord\fP [\-v] [\-\-author=\fIAUTHOR\fP] [\-\-date=\fIDATE\fP] [\-m \fIMESSAGE\fP] [\-\-amend] [\-s]
.SH DESCRIPTION
.sp
\fBgit\-crecord\fP is a Git subcommand which allows users to interactively
select changes to commit or stage using a ncurses\-based text user interface.
It is a port of the Mercurial crecord extension originally written by
Mark Edgington.
.sp
git\-crecord allows you to interactively choose among the changes you have made
(with line\-level granularity), and commit, stage or unstage only those changes
you select.
After committing or staging the selected changes, the unselected changes are
still present in your working copy, so you can use crecord multiple times to
split large changes into several smaller changesets.
.SH OPTIONS
.INDENT 0.0
.TP
.BI \-\-author\fB= AUTHOR
Override the commit author. Specify an explicit author using the standard \fBA U Thor <author@example.com>\fP format.  Otherwise \fIAUTHOR\fP is assumed to be a pattern and is used to search for an existing commit by that author (i.e. \fBrev\-list \-\-all \-i \-\-author=AUTHOR\fP); the commit author is then copied from the first such commit found.
.TP
.BI \-\-date\fB= DATE
Override the author date used in the commit.
.TP
.BI \-m \ MESSAGE\fR,\fB \ \-\-message\fB= MESSAGE
Use the given \fIMESSAGE\fP as the commit message. If multiple \fB\-m\fP options are given, their values are concatenated as separate paragraphs.
.TP
.BI \-C \ COMMIT\fR,\fB \ \-\-reuse\-message\fB= COMMIT
Take an existing commit object, and reuse the log message and the authorship information (including the timestamp) when creating the commit.
.TP
.BI \-c \ COMMIT\fR,\fB \ \-\-reedit\-message\fB= COMMIT
Like \fB\-C\fP, but with \fB\-c\fP the editor is invoked, so that the user can further edit the commit message.
.TP
.B \-\-reset\-author
When used with \fB\-C\fP/\fB\-c\fP/\fB\-\-amend\fP options, or when committing after a conflicting cherry\-pick, declare that the authorship of the resulting commit now belongs to the committer. This also renews the author timestamp.
.TP
.B \-s\fP,\fB  \-\-signoff
Add \fBSigned\-off\-by\fP line by the committer at the end of the commit log message.
.TP
.B \-\-amend
Amend previous commit. Replace the tip of the current branch by creating a new commit. The message from the original commit is used as the starting point, instead of an empty message, when no other message is specified from the command line via \fB\-m\fP option. The new commit has the same parents and author as the current one.
.TP
.BI \-S \ KEY\-ID\fR,\fB \ \-\-gpg\-sign \ KEY\-ID
GPG\-sign commits. The \fIKEY\-ID\fP argument is optional and defaults to the committer identity.
.TP
.B \-\-no\-gpg\-sign
Donâ€™t sign this commit even if \fIcommit.gpgSign\fP is set.
.TP
.B \-v\fP,\fB  \-\-verbose
Be more verbose.
.TP
.B \-\-debug
Show all sorts of debugging information. Implies \fB\-\-verbose\fP\&.
.TP
.B \-h
Show this help message and exit.
.UNINDENT
.SH SEE ALSO
.sp
\fBgit\-commit\fP(1)
.SH AUTHOR
Andrej Shadura <andrew@shadura.me>
.\" Generated by docutils manpage writer.
.
