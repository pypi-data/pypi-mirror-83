# setting retries to avoid following error on azure
# fatal: [hive0.pdns]: FAILED! => changed=false
#  msg: 'Failure downloading https://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm, Request failed: <urlopen error [Errno 101] Network is unreachable>'
#  results: []
- name: Install Zabbix Repo
  yum:
    name: https://repo.zabbix.com/zabbix/5.1/rhel/8/x86_64/zabbix-release-5.1-1.el8.noarch.rpm
    disable_gpg_check: true
    state: present
  until: not download_zabbix_repo.failed
  retries: 10
  delay: 5
  register: download_zabbix_repo
- import_tasks: iptables.yml
  vars:
    hive_safe_iptables_name: zabbix_tcp
    hive_safe_iptables_dports:
      - 10050
    hive_safe_iptables_protocol: tcp
    hive_safe_iptables_sources: "{{ (groups['servers'] | intersect(groups[hive_stage]) | map('extract', hostvars, 'hive_private_ip') | list) + [hive_safe_zabbix_subnet | ipaddr(2) | ipaddr('address')] }}"
- name: yum install
  yum:
    name=zabbix-agent
    state=installed
- name: install uptime
  pip:
    name: uptime
    state: present
    virtualenv: "{{ hive_home_dir }}/docker"
- name: copy selinux module for zabbix-agent
  copy:
    src: hive.te
    dest: /root/hive.te
  register: result_hive_zabbix_agent_policy
  when: hive_safe_selinux != 'disabled'
- name: install selinux module for zabbix-agent
  make:
    chdir: /root
    target: load
    file: /usr/share/selinux/devel/Makefile
  become: yes
  when: hive_safe_selinux != 'disabled'
- name: set SELinux boolean for zabbix agent
  seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  loop:
  - authlogin_nsswitch_use_ldap
  - domain_can_mmap_files
  - nis_enabled
  - zabbix_run_sudo
  when: hive_safe_selinux != 'disabled'
- name: modify zabbix_agentd config
  template: >
    src=zabbix_agentd.conf.j2
    dest='/etc/zabbix/zabbix_agentd.conf'
    owner=root
    group=root
    mode=0644
  notify: zabbix-agent configured
- name: put zabbix_agentd userparameter definition from template
  template:
    src: "{{ item.src }}"
    dest: "/etc/zabbix/zabbix_agentd.d/{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - src: docker-volume.j2
      dest: docker-volume.conf
    - src: docker-service.j2
      dest: docker-service.conf
  notify: zabbix-agent configured
  when: "'repository' in group_names"
- name: put zabbix_agentd userparameter definition
  copy:
    src: "{{ item }}"
    dest: /etc/zabbix/zabbix_agentd.d/
    owner: root
    group: root
    mode: 0644
  loop:
    - drbd-resource.conf
    - userparameter_systemd_services.conf
  notify: zabbix-agent configured
  when: "'hives' in group_names"
- name: put zabbix_agentd userparameter definition for selinux
  copy:
    src: ausearch.conf
    dest: /etc/zabbix/zabbix_agentd.d/
    owner: root
    group: root
    mode: 0644
  when: hive_safe_selinux != 'disabled'
- name: put script to discover docker volumes and services
  copy:
    src: "{{ item }}"
    dest: "{{ hive_home_dir }}/{{ item }}"
    owner: "{{hive_safe_admin}}"
    group: "{{hive_admin_group | default(hive_safe_admin)}}"
  loop:
    - docker-volume-discover.py
    - docker-service.py
  when: "'repository' in group_names"
- name: put script to discover and get status systemd services
  copy:
    src: "{{ item }}"
    dest: "/usr/bin/"
    mode: 0755
  loop:
    - zbx_service_discovery.sh
    - zbx_service_restart_check.sh
    - zbx_service_status_check.sh
- name: put additional config file for zabbix discover
  copy:
    src: service_discovery_blacklist
    dest: /etc/zabbix/
    owner: root
    group: root
    mode: 0644
- name: put sudoers file for zabbix agent
  copy:
    src: sudoers.zabbix
    dest: /etc/sudoers.d/zabbix
    owner: root
    group: root
    mode: 0440
- name: enable zabbix-agent
  service:
    name: zabbix-agent
    enabled: yes