# coding: utf-8

"""
    CityPay Payment API

     This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security <aside class=\"notice\">   Before we begin a reminder that your application will need to adhere to PCI-DSS standards to operate safely   and to meet requirements set out by Visa and MasterCard and the PCI Security Standards Council including: </aside>  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities.   # noqa: E501

    Contact: support@citypay.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import citypay
from citypay.models.card_holder_account import CardHolderAccount  # noqa: E501
from citypay.rest import ApiException
from citypay.api_client import ApiClient


class TestCardHolderAccount(unittest.TestCase):
    """CardHolderAccount unit test stubs"""

    def setUp(self):
        self.data = """
        {
            "account_id": "abc123",
            "cards": [{
                          "bin_commercial": false,
                          "bin_corporate": false,
                          "bin_country_issued": "GBR",
                          "bin_currency": "GBP",
                          "bin_description": "Visa Classic",
                          "bin_eu": false,
                          "card_id": "2U1XV3PJSeUXFNzXidACn2TyCzAK",
                          "card_status": "ACTIVE",
                          "default": true,
                          "expmonth": 7,
                          "expyear": 2022,
                          "label": "TestVisa/0002",
                          "label2": "TestVisa/0002,Exp:7/2022",
                          "scheme": "TestVisa",
                          "token": "ctPCzxq4WxEwWbkG7whRPLRCG27vYFNzsEDNihYmDwqsBc5QEXnFRvq2j5oRyb56ErRVEQaBN7PFMEDtjQQXDQpfxKkp3AxbyeGo61RhKBjFTFegaP4LBZUxFZimsXW8Deae9VyhWSgS2o8AXzTJU9UP3bo8kRcpataxuH3fJj3JHDnyeZt"
                      }],
            "contact": {
                "address1": "7 Esplanade",
                "address2": "",
                "address3": "",
                "area": "St Helier",
                "company": "CityPay Ltd",
                "country": "JE",
                "email": "support@citypay.com",
                "firstname": "Joe",
                "lastname": "Wicks",
                "mobile_no": "077112123456",
                "postcode": "JE2 3QA",
                "telephone_no": "+4415341234567",
                "title": "Mr"},
            "date_created": "2020-08-01T09:15:24Z",
            "default_card_id": "2U1XV3PJSeUXFNzXidACn2TyCzAK",
            "default_card_index": 0,
            "status": "ACTIVE",
            "unique_id": "Ew3BKeWNdL3qKQU7XK7Sbt2eAL5WFW4AfoASDSA"
        }
        """

        self.instance = ApiClient().deserialize(self, "CardHolderAccount")

    def tearDown(self):
        pass

    def testCardHolderAccount(self):
        """Test CardHolderAccount"""
        self.assertEqual(self.instance.account_id, "abc123")
        self.assertEqual(self.instance.cards[0].bin_commercial, False)
        self.assertEqual(self.instance.cards[0].bin_corporate, False)
        self.assertEqual(self.instance.cards[0].bin_country_issued, "GBR")
        self.assertEqual(self.instance.cards[0].bin_currency, "GBP")
        self.assertEqual(self.instance.cards[0].bin_description, "Visa Classic")
        self.assertEqual(self.instance.cards[0].bin_eu, False)
        self.assertEqual(self.instance.cards[0].card_id, "2U1XV3PJSeUXFNzXidACn2TyCzAK")
        self.assertEqual(self.instance.cards[0].card_status, "ACTIVE")
        self.assertEqual(self.instance.cards[0].default, True)
        self.assertEqual(self.instance.cards[0].expmonth, 7)
        self.assertEqual(self.instance.cards[0].expyear, 2022)
        self.assertEqual(self.instance.cards[0].label, "TestVisa/0002")
        self.assertEqual(self.instance.cards[0].label2, "TestVisa/0002,Exp:7/2022")
        self.assertEqual(self.instance.cards[0].scheme, "TestVisa")
        self.assertEqual(self.instance.cards[0].token, "ctPCzxq4WxEwWbkG7whRPLRCG27vYFNzsEDNihYmDwqsBc5QEXnFRvq2j5oRyb56ErRVEQaBN7PFMEDtjQQXDQpfxKkp3AxbyeGo61RhKBjFTFegaP4LBZUxFZimsXW8Deae9VyhWSgS2o8AXzTJU9UP3bo8kRcpataxuH3fJj3JHDnyeZt")
        self.assertEqual(self.instance.contact.address1, "7 Esplanade")
        self.assertEqual(self.instance.contact.address2, "")
        self.assertEqual(self.instance.contact.address3, "")
        self.assertEqual(self.instance.contact.area, "St Helier")
        self.assertEqual(self.instance.contact.company, "CityPay Ltd")
        self.assertEqual(self.instance.contact.country, "JE")
        self.assertEqual(self.instance.contact.email, "support@citypay.com")
        self.assertEqual(self.instance.contact.firstname, "Joe")
        self.assertEqual(self.instance.contact.lastname, "Wicks")
        self.assertEqual(self.instance.contact.mobile_no, "077112123456")
        self.assertEqual(self.instance.contact.postcode, "JE2 3QA")
        self.assertEqual(self.instance.contact.telephone_no, "+4415341234567")
        self.assertEqual(self.instance.contact.title, "Mr")
        self.assertEqual(self.instance.date_created.isoformat(), "2020-08-01T09:15:24+00:00")
        self.assertEqual(self.instance.default_card_id, "2U1XV3PJSeUXFNzXidACn2TyCzAK")
        self.assertEqual(self.instance.default_card_index, 0)
        self.assertEqual(self.instance.status, "ACTIVE")
        self.assertEqual(self.instance.unique_id, "Ew3BKeWNdL3qKQU7XK7Sbt2eAL5WFW4AfoASDSA")


if __name__ == '__main__':
    unittest.main()
