{"version":3,"sources":["webpack:///./js/api/reverse.js"],"names":["getReverse","method","path","patchReverse","enabled","scheme","host","port","timeout","params","data"],"mappings":"0FAAA,0GAYO,SAASA,IACZ,OAAO,UAAgB,CAACC,OAAQ,MAAOC,KAAM,aAc1C,SAASC,EAAaC,EAASC,EAAQC,EAAMC,EAAML,EAAMM,GAC5D,IAAIC,EAAS,CACTL,QAASA,EACTC,OAAQA,EACRC,KAAMA,EACNC,KAAMA,EACNL,KAAMA,EACNM,QAASA,GAGb,OAAO,UAAgB,CAACP,OAAQ,QAASC,KAAM,WAAYQ,KAAMD","file":"2.js","sourcesContent":["/**\n * @namespace qtoggle.api.reverse\n */\n\nimport * as BaseAPI from './base.js'\n\n\n/**\n * GET /reverse API function call.\n * @alias qtoggle.api.reverse.getReverse\n * @returns {Promise}\n */\nexport function getReverse() {\n    return BaseAPI.apiCall({method: 'GET', path: '/reverse'})\n}\n\n/**\n * PATCH /reverse API function call.\n * @alias qtoggle.api.reverse.patchReverse\n * @param {Boolean} enabled whether the reverse API call mechanism is enabled or not\n * @param {String} scheme the URL scheme\n * @param {String} host the host (IP address or hostname) of the client\n * @param {Number} port the TCP port\n * @param {String} path the location for the reverse request\n * @param {Number} timeout the request timeout, in seconds\n * @returns {Promise}\n */\nexport function patchReverse(enabled, scheme, host, port, path, timeout) {\n    let params = {\n        enabled: enabled,\n        scheme: scheme,\n        host: host,\n        port: port,\n        path: path,\n        timeout: timeout\n    }\n\n    return BaseAPI.apiCall({method: 'PATCH', path: '/reverse', data: params})\n}\n"],"sourceRoot":""}